// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: restsystem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "restsystem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class RestGetCodecInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestGetCodecInfo> {
} _RestGetCodecInfo_default_instance_;
class RestGetDeviceSummaryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestGetDeviceSummary> {
} _RestGetDeviceSummary_default_instance_;
class RestGetRunInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestGetRunInfo> {
} _RestGetRunInfo_default_instance_;
class RestGetSystemInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestGetSystemInfo> {
} _RestGetSystemInfo_default_instance_;
class VolumesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Volumes> {
} _Volumes_default_instance_;
class RestGetVolumesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestGetVolumes> {
} _RestGetVolumes_default_instance_;
class RestKeepaliveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestKeepalive> {
} _RestKeepalive_default_instance_;
class RestLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestLogin> {
} _RestLogin_default_instance_;
class RestLogoutDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestLogout> {
} _RestLogout_default_instance_;
class RestUpdateUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RestUpdateUser> {
} _RestUpdateUser_default_instance_;

namespace protobuf_restsystem_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, ncpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, ncpucore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, strcpumodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, strhwencoders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, strhwdecoders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, strswencoders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetCodecInfo, strswdecoders_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ncameratotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ncameraonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nhikdevtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nhikdevonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ndhdevtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ndhdevonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nhikiscdevtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nhikiscdevonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ntddevtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ntddevonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ngbdevtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ngbdevonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ncloudtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, ncloudonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nrtsprtmptotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nrtsprtmponline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nonviftotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nonvifonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nrtmppushtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetDeviceSummary, nrtmppushonline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strruntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strcpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strmemory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strnetworkin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strnetworkout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strtotalspace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, strfreespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, nruntimesec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, ncpuusage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, nmemoryusage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, ntotalmemorybyte_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, nnetworkink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, nnetworkoutk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, ntotalspacebyte_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetRunInfo, nfreespacebyte_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strhostid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strlicensetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strlicensefull_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strchannellimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, strendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bdevicesdk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bdevicesdkpb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bgb28181_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, btranscoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bcluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bplatform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetSystemInfo, bvideoconference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, strdevice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, strpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, btotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, bfree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Volumes, breadonly_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetVolumes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestGetVolumes, vol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestKeepalive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestKeepalive, bstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestKeepalive, strcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogin, bstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogin, strsession_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogin, ntimeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogout, bstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestLogout, strcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestUpdateUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestUpdateUser, bstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestUpdateUser, strcode_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RestGetCodecInfo)},
  { 11, -1, sizeof(RestGetDeviceSummary)},
  { 35, -1, sizeof(RestGetRunInfo)},
  { 54, -1, sizeof(RestGetSystemInfo)},
  { 71, -1, sizeof(Volumes)},
  { 80, -1, sizeof(RestGetVolumes)},
  { 85, -1, sizeof(RestKeepalive)},
  { 91, -1, sizeof(RestLogin)},
  { 98, -1, sizeof(RestLogout)},
  { 104, -1, sizeof(RestUpdateUser)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestGetCodecInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestGetDeviceSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestGetRunInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestGetSystemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Volumes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestGetVolumes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestKeepalive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestLogout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RestUpdateUser_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "restsystem.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _RestGetCodecInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RestGetDeviceSummary_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RestGetRunInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RestGetSystemInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Volumes_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RestGetVolumes_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RestKeepalive_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RestLogin_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _RestLogout_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _RestUpdateUser_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RestGetCodecInfo_default_instance_.DefaultConstruct();
  _RestGetDeviceSummary_default_instance_.DefaultConstruct();
  _RestGetRunInfo_default_instance_.DefaultConstruct();
  _RestGetSystemInfo_default_instance_.DefaultConstruct();
  _Volumes_default_instance_.DefaultConstruct();
  _RestGetVolumes_default_instance_.DefaultConstruct();
  _RestKeepalive_default_instance_.DefaultConstruct();
  _RestLogin_default_instance_.DefaultConstruct();
  _RestLogout_default_instance_.DefaultConstruct();
  _RestUpdateUser_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020restsystem.proto\"\243\001\n\020RestGetCodecInfo\022"
      "\014\n\004nCPU\030\001 \001(\005\022\020\n\010nCPUCore\030\002 \001(\005\022\023\n\013strCP"
      "UModel\030\003 \001(\t\022\025\n\rstrHWEncoders\030\004 \001(\t\022\025\n\rs"
      "trHWDecoders\030\005 \001(\t\022\025\n\rstrSWEncoders\030\006 \001("
      "\t\022\025\n\rstrSWDecoders\030\007 \001(\t\"\334\003\n\024RestGetDevi"
      "ceSummary\022\024\n\014nCameraTotal\030\001 \001(\t\022\025\n\rnCame"
      "raOnline\030\002 \001(\t\022\024\n\014nHikDevTotal\030\003 \001(\t\022\025\n\r"
      "nHikDevOnline\030\004 \001(\t\022\023\n\013nDhDevTotal\030\005 \001(\t"
      "\022\024\n\014nDhDevOnline\030\006 \001(\t\022\027\n\017nHikIscDevTota"
      "l\030\007 \001(\t\022\030\n\020nHikIscDevOnline\030\010 \001(\t\022\023\n\013nTd"
      "DevTotal\030\t \001(\t\022\024\n\014nTdDevOnline\030\n \001(\t\022\023\n\013"
      "nGbDevTotal\030\013 \001(\t\022\024\n\014nGbDevOnline\030\014 \001(\t\022"
      "\023\n\013nCloudTotal\030\r \001(\t\022\024\n\014nCloudOnline\030\016 \001"
      "(\t\022\026\n\016nRTSPRTMPTotal\030\017 \001(\t\022\027\n\017nRTSPRTMPO"
      "nline\030\020 \001(\t\022\023\n\013nONVIFTotal\030\021 \001(\t\022\024\n\014nONV"
      "IFOnline\030\022 \001(\t\022\026\n\016nRTMPPushTotal\030\023 \001(\t\022\027"
      "\n\017nRTMPPushOnline\030\024 \001(\t\"\325\002\n\016RestGetRunIn"
      "fo\022\022\n\nstrRunTime\030\001 \001(\t\022\016\n\006strCPU\030\002 \001(\t\022\021"
      "\n\tstrMemory\030\003 \001(\t\022\024\n\014strNetworkIn\030\004 \001(\t\022"
      "\025\n\rstrNetworkOut\030\005 \001(\t\022\025\n\rstrTotalSpace\030"
      "\006 \001(\t\022\024\n\014strFreeSpace\030\007 \001(\t\022\023\n\013nRunTimeS"
      "ec\030\010 \001(\t\022\021\n\tnCPUUsage\030\t \001(\t\022\024\n\014nMemoryUs"
      "age\030\n \001(\t\022\030\n\020nTotalMemoryByte\030\013 \001(\t\022\023\n\013n"
      "NetworkInK\030\014 \001(\t\022\024\n\014nNetworkOutK\030\r \001(\t\022\027"
      "\n\017nTotalSpaceByte\030\016 \001(\t\022\026\n\016nFreeSpaceByt"
      "e\030\017 \001(\t\"\250\002\n\021RestGetSystemInfo\022\022\n\nstrVers"
      "ion\030\001 \001(\t\022\021\n\tstrHostId\030\002 \001(\t\022\026\n\016strLicen"
      "seType\030\003 \001(\t\022\026\n\016strLicenseFull\030\004 \001(\t\022\027\n\017"
      "strChannelLimit\030\005 \001(\t\022\022\n\nstrEndtime\030\006 \001("
      "\t\022\022\n\nbDeviceSDK\030\007 \001(\010\022\024\n\014bDeviceSDKPb\030\010 "
      "\001(\010\022\020\n\010bGB28181\030\t \001(\010\022\024\n\014bTranscoding\030\n "
      "\001(\010\022\020\n\010bCluster\030\013 \001(\010\022\021\n\tbPlatform\030\014 \001(\010"
      "\022\030\n\020bVideoConference\030\r \001(\010\"_\n\007Volumes\022\021\n"
      "\tstrDevice\030\001 \001(\t\022\017\n\007strPath\030\002 \001(\t\022\016\n\006bTo"
      "tal\030\003 \001(\t\022\r\n\005bFree\030\004 \001(\t\022\021\n\tbReadOnly\030\005 "
      "\001(\010\"\'\n\016RestGetVolumes\022\025\n\003vol\030\001 \003(\0132\010.Vol"
      "umes\"1\n\rRestKeepalive\022\017\n\007bStatus\030\001 \001(\010\022\017"
      "\n\007strCode\030\002 \001(\t\"B\n\tRestLogin\022\017\n\007bStatus\030"
      "\001 \001(\010\022\022\n\nstrSession\030\002 \001(\t\022\020\n\010nTimeout\030\003 "
      "\001(\005\".\n\nRestLogout\022\017\n\007bStatus\030\001 \001(\010\022\017\n\007st"
      "rCode\030\002 \001(\t\"2\n\016RestUpdateUser\022\017\n\007bStatus"
      "\030\001 \001(\010\022\017\n\007strCode\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1671);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "restsystem.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_restsystem_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestGetCodecInfo::kNCPUFieldNumber;
const int RestGetCodecInfo::kNCPUCoreFieldNumber;
const int RestGetCodecInfo::kStrCPUModelFieldNumber;
const int RestGetCodecInfo::kStrHWEncodersFieldNumber;
const int RestGetCodecInfo::kStrHWDecodersFieldNumber;
const int RestGetCodecInfo::kStrSWEncodersFieldNumber;
const int RestGetCodecInfo::kStrSWDecodersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestGetCodecInfo::RestGetCodecInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestGetCodecInfo)
}
RestGetCodecInfo::RestGetCodecInfo(const RestGetCodecInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcpumodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcpumodel().size() > 0) {
    strcpumodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcpumodel_);
  }
  strhwencoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strhwencoders().size() > 0) {
    strhwencoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhwencoders_);
  }
  strhwdecoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strhwdecoders().size() > 0) {
    strhwdecoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhwdecoders_);
  }
  strswencoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strswencoders().size() > 0) {
    strswencoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strswencoders_);
  }
  strswdecoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strswdecoders().size() > 0) {
    strswdecoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strswdecoders_);
  }
  ::memcpy(&ncpu_, &from.ncpu_,
    reinterpret_cast<char*>(&ncpucore_) -
    reinterpret_cast<char*>(&ncpu_) + sizeof(ncpucore_));
  // @@protoc_insertion_point(copy_constructor:RestGetCodecInfo)
}

void RestGetCodecInfo::SharedCtor() {
  strcpumodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwencoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwdecoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswencoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswdecoders_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncpu_, 0, reinterpret_cast<char*>(&ncpucore_) -
    reinterpret_cast<char*>(&ncpu_) + sizeof(ncpucore_));
  _cached_size_ = 0;
}

RestGetCodecInfo::~RestGetCodecInfo() {
  // @@protoc_insertion_point(destructor:RestGetCodecInfo)
  SharedDtor();
}

void RestGetCodecInfo::SharedDtor() {
  strcpumodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwencoders_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwdecoders_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswencoders_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswdecoders_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestGetCodecInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestGetCodecInfo::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[0].descriptor;
}

const RestGetCodecInfo& RestGetCodecInfo::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestGetCodecInfo* RestGetCodecInfo::New(::google::protobuf::Arena* arena) const {
  RestGetCodecInfo* n = new RestGetCodecInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestGetCodecInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RestGetCodecInfo)
  strcpumodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwencoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhwdecoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswencoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strswdecoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ncpu_, 0, reinterpret_cast<char*>(&ncpucore_) -
    reinterpret_cast<char*>(&ncpu_) + sizeof(ncpucore_));
}

bool RestGetCodecInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestGetCodecInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nCPU = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nCPUCore = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ncpucore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCPUModel = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcpumodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcpumodel().data(), this->strcpumodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetCodecInfo.strCPUModel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strHWEncoders = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strhwencoders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strhwencoders().data(), this->strhwencoders().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetCodecInfo.strHWEncoders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strHWDecoders = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strhwdecoders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strhwdecoders().data(), this->strhwdecoders().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetCodecInfo.strHWDecoders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSWEncoders = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strswencoders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strswencoders().data(), this->strswencoders().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetCodecInfo.strSWEncoders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSWDecoders = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strswdecoders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strswdecoders().data(), this->strswdecoders().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetCodecInfo.strSWDecoders"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestGetCodecInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestGetCodecInfo)
  return false;
#undef DO_
}

void RestGetCodecInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestGetCodecInfo)
  // int32 nCPU = 1;
  if (this->ncpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ncpu(), output);
  }

  // int32 nCPUCore = 2;
  if (this->ncpucore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ncpucore(), output);
  }

  // string strCPUModel = 3;
  if (this->strcpumodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcpumodel().data(), this->strcpumodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strCPUModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strcpumodel(), output);
  }

  // string strHWEncoders = 4;
  if (this->strhwencoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhwencoders().data(), this->strhwencoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strHWEncoders");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strhwencoders(), output);
  }

  // string strHWDecoders = 5;
  if (this->strhwdecoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhwdecoders().data(), this->strhwdecoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strHWDecoders");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strhwdecoders(), output);
  }

  // string strSWEncoders = 6;
  if (this->strswencoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strswencoders().data(), this->strswencoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strSWEncoders");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strswencoders(), output);
  }

  // string strSWDecoders = 7;
  if (this->strswdecoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strswdecoders().data(), this->strswdecoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strSWDecoders");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strswdecoders(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestGetCodecInfo)
}

::google::protobuf::uint8* RestGetCodecInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestGetCodecInfo)
  // int32 nCPU = 1;
  if (this->ncpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ncpu(), target);
  }

  // int32 nCPUCore = 2;
  if (this->ncpucore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ncpucore(), target);
  }

  // string strCPUModel = 3;
  if (this->strcpumodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcpumodel().data(), this->strcpumodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strCPUModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strcpumodel(), target);
  }

  // string strHWEncoders = 4;
  if (this->strhwencoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhwencoders().data(), this->strhwencoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strHWEncoders");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strhwencoders(), target);
  }

  // string strHWDecoders = 5;
  if (this->strhwdecoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhwdecoders().data(), this->strhwdecoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strHWDecoders");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strhwdecoders(), target);
  }

  // string strSWEncoders = 6;
  if (this->strswencoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strswencoders().data(), this->strswencoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strSWEncoders");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strswencoders(), target);
  }

  // string strSWDecoders = 7;
  if (this->strswdecoders().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strswdecoders().data(), this->strswdecoders().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetCodecInfo.strSWDecoders");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strswdecoders(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestGetCodecInfo)
  return target;
}

size_t RestGetCodecInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestGetCodecInfo)
  size_t total_size = 0;

  // string strCPUModel = 3;
  if (this->strcpumodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcpumodel());
  }

  // string strHWEncoders = 4;
  if (this->strhwencoders().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strhwencoders());
  }

  // string strHWDecoders = 5;
  if (this->strhwdecoders().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strhwdecoders());
  }

  // string strSWEncoders = 6;
  if (this->strswencoders().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strswencoders());
  }

  // string strSWDecoders = 7;
  if (this->strswdecoders().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strswdecoders());
  }

  // int32 nCPU = 1;
  if (this->ncpu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncpu());
  }

  // int32 nCPUCore = 2;
  if (this->ncpucore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ncpucore());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestGetCodecInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestGetCodecInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RestGetCodecInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestGetCodecInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestGetCodecInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestGetCodecInfo)
    MergeFrom(*source);
  }
}

void RestGetCodecInfo::MergeFrom(const RestGetCodecInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestGetCodecInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcpumodel().size() > 0) {

    strcpumodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcpumodel_);
  }
  if (from.strhwencoders().size() > 0) {

    strhwencoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhwencoders_);
  }
  if (from.strhwdecoders().size() > 0) {

    strhwdecoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhwdecoders_);
  }
  if (from.strswencoders().size() > 0) {

    strswencoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strswencoders_);
  }
  if (from.strswdecoders().size() > 0) {

    strswdecoders_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strswdecoders_);
  }
  if (from.ncpu() != 0) {
    set_ncpu(from.ncpu());
  }
  if (from.ncpucore() != 0) {
    set_ncpucore(from.ncpucore());
  }
}

void RestGetCodecInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestGetCodecInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestGetCodecInfo::CopyFrom(const RestGetCodecInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestGetCodecInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestGetCodecInfo::IsInitialized() const {
  return true;
}

void RestGetCodecInfo::Swap(RestGetCodecInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestGetCodecInfo::InternalSwap(RestGetCodecInfo* other) {
  strcpumodel_.Swap(&other->strcpumodel_);
  strhwencoders_.Swap(&other->strhwencoders_);
  strhwdecoders_.Swap(&other->strhwdecoders_);
  strswencoders_.Swap(&other->strswencoders_);
  strswdecoders_.Swap(&other->strswdecoders_);
  std::swap(ncpu_, other->ncpu_);
  std::swap(ncpucore_, other->ncpucore_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestGetCodecInfo::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestGetCodecInfo

// int32 nCPU = 1;
void RestGetCodecInfo::clear_ncpu() {
  ncpu_ = 0;
}
::google::protobuf::int32 RestGetCodecInfo::ncpu() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.nCPU)
  return ncpu_;
}
void RestGetCodecInfo::set_ncpu(::google::protobuf::int32 value) {
  
  ncpu_ = value;
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.nCPU)
}

// int32 nCPUCore = 2;
void RestGetCodecInfo::clear_ncpucore() {
  ncpucore_ = 0;
}
::google::protobuf::int32 RestGetCodecInfo::ncpucore() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.nCPUCore)
  return ncpucore_;
}
void RestGetCodecInfo::set_ncpucore(::google::protobuf::int32 value) {
  
  ncpucore_ = value;
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.nCPUCore)
}

// string strCPUModel = 3;
void RestGetCodecInfo::clear_strcpumodel() {
  strcpumodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetCodecInfo::strcpumodel() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.strCPUModel)
  return strcpumodel_.GetNoArena();
}
void RestGetCodecInfo::set_strcpumodel(const ::std::string& value) {
  
  strcpumodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.strCPUModel)
}
#if LANG_CXX11
void RestGetCodecInfo::set_strcpumodel(::std::string&& value) {
  
  strcpumodel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetCodecInfo.strCPUModel)
}
#endif
void RestGetCodecInfo::set_strcpumodel(const char* value) {
  
  strcpumodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetCodecInfo.strCPUModel)
}
void RestGetCodecInfo::set_strcpumodel(const char* value, size_t size) {
  
  strcpumodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetCodecInfo.strCPUModel)
}
::std::string* RestGetCodecInfo::mutable_strcpumodel() {
  
  // @@protoc_insertion_point(field_mutable:RestGetCodecInfo.strCPUModel)
  return strcpumodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetCodecInfo::release_strcpumodel() {
  // @@protoc_insertion_point(field_release:RestGetCodecInfo.strCPUModel)
  
  return strcpumodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetCodecInfo::set_allocated_strcpumodel(::std::string* strcpumodel) {
  if (strcpumodel != NULL) {
    
  } else {
    
  }
  strcpumodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcpumodel);
  // @@protoc_insertion_point(field_set_allocated:RestGetCodecInfo.strCPUModel)
}

// string strHWEncoders = 4;
void RestGetCodecInfo::clear_strhwencoders() {
  strhwencoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetCodecInfo::strhwencoders() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.strHWEncoders)
  return strhwencoders_.GetNoArena();
}
void RestGetCodecInfo::set_strhwencoders(const ::std::string& value) {
  
  strhwencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.strHWEncoders)
}
#if LANG_CXX11
void RestGetCodecInfo::set_strhwencoders(::std::string&& value) {
  
  strhwencoders_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetCodecInfo.strHWEncoders)
}
#endif
void RestGetCodecInfo::set_strhwencoders(const char* value) {
  
  strhwencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetCodecInfo.strHWEncoders)
}
void RestGetCodecInfo::set_strhwencoders(const char* value, size_t size) {
  
  strhwencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetCodecInfo.strHWEncoders)
}
::std::string* RestGetCodecInfo::mutable_strhwencoders() {
  
  // @@protoc_insertion_point(field_mutable:RestGetCodecInfo.strHWEncoders)
  return strhwencoders_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetCodecInfo::release_strhwencoders() {
  // @@protoc_insertion_point(field_release:RestGetCodecInfo.strHWEncoders)
  
  return strhwencoders_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetCodecInfo::set_allocated_strhwencoders(::std::string* strhwencoders) {
  if (strhwencoders != NULL) {
    
  } else {
    
  }
  strhwencoders_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strhwencoders);
  // @@protoc_insertion_point(field_set_allocated:RestGetCodecInfo.strHWEncoders)
}

// string strHWDecoders = 5;
void RestGetCodecInfo::clear_strhwdecoders() {
  strhwdecoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetCodecInfo::strhwdecoders() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.strHWDecoders)
  return strhwdecoders_.GetNoArena();
}
void RestGetCodecInfo::set_strhwdecoders(const ::std::string& value) {
  
  strhwdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.strHWDecoders)
}
#if LANG_CXX11
void RestGetCodecInfo::set_strhwdecoders(::std::string&& value) {
  
  strhwdecoders_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetCodecInfo.strHWDecoders)
}
#endif
void RestGetCodecInfo::set_strhwdecoders(const char* value) {
  
  strhwdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetCodecInfo.strHWDecoders)
}
void RestGetCodecInfo::set_strhwdecoders(const char* value, size_t size) {
  
  strhwdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetCodecInfo.strHWDecoders)
}
::std::string* RestGetCodecInfo::mutable_strhwdecoders() {
  
  // @@protoc_insertion_point(field_mutable:RestGetCodecInfo.strHWDecoders)
  return strhwdecoders_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetCodecInfo::release_strhwdecoders() {
  // @@protoc_insertion_point(field_release:RestGetCodecInfo.strHWDecoders)
  
  return strhwdecoders_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetCodecInfo::set_allocated_strhwdecoders(::std::string* strhwdecoders) {
  if (strhwdecoders != NULL) {
    
  } else {
    
  }
  strhwdecoders_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strhwdecoders);
  // @@protoc_insertion_point(field_set_allocated:RestGetCodecInfo.strHWDecoders)
}

// string strSWEncoders = 6;
void RestGetCodecInfo::clear_strswencoders() {
  strswencoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetCodecInfo::strswencoders() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.strSWEncoders)
  return strswencoders_.GetNoArena();
}
void RestGetCodecInfo::set_strswencoders(const ::std::string& value) {
  
  strswencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.strSWEncoders)
}
#if LANG_CXX11
void RestGetCodecInfo::set_strswencoders(::std::string&& value) {
  
  strswencoders_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetCodecInfo.strSWEncoders)
}
#endif
void RestGetCodecInfo::set_strswencoders(const char* value) {
  
  strswencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetCodecInfo.strSWEncoders)
}
void RestGetCodecInfo::set_strswencoders(const char* value, size_t size) {
  
  strswencoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetCodecInfo.strSWEncoders)
}
::std::string* RestGetCodecInfo::mutable_strswencoders() {
  
  // @@protoc_insertion_point(field_mutable:RestGetCodecInfo.strSWEncoders)
  return strswencoders_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetCodecInfo::release_strswencoders() {
  // @@protoc_insertion_point(field_release:RestGetCodecInfo.strSWEncoders)
  
  return strswencoders_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetCodecInfo::set_allocated_strswencoders(::std::string* strswencoders) {
  if (strswencoders != NULL) {
    
  } else {
    
  }
  strswencoders_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strswencoders);
  // @@protoc_insertion_point(field_set_allocated:RestGetCodecInfo.strSWEncoders)
}

// string strSWDecoders = 7;
void RestGetCodecInfo::clear_strswdecoders() {
  strswdecoders_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetCodecInfo::strswdecoders() const {
  // @@protoc_insertion_point(field_get:RestGetCodecInfo.strSWDecoders)
  return strswdecoders_.GetNoArena();
}
void RestGetCodecInfo::set_strswdecoders(const ::std::string& value) {
  
  strswdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetCodecInfo.strSWDecoders)
}
#if LANG_CXX11
void RestGetCodecInfo::set_strswdecoders(::std::string&& value) {
  
  strswdecoders_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetCodecInfo.strSWDecoders)
}
#endif
void RestGetCodecInfo::set_strswdecoders(const char* value) {
  
  strswdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetCodecInfo.strSWDecoders)
}
void RestGetCodecInfo::set_strswdecoders(const char* value, size_t size) {
  
  strswdecoders_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetCodecInfo.strSWDecoders)
}
::std::string* RestGetCodecInfo::mutable_strswdecoders() {
  
  // @@protoc_insertion_point(field_mutable:RestGetCodecInfo.strSWDecoders)
  return strswdecoders_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetCodecInfo::release_strswdecoders() {
  // @@protoc_insertion_point(field_release:RestGetCodecInfo.strSWDecoders)
  
  return strswdecoders_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetCodecInfo::set_allocated_strswdecoders(::std::string* strswdecoders) {
  if (strswdecoders != NULL) {
    
  } else {
    
  }
  strswdecoders_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strswdecoders);
  // @@protoc_insertion_point(field_set_allocated:RestGetCodecInfo.strSWDecoders)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestGetDeviceSummary::kNCameraTotalFieldNumber;
const int RestGetDeviceSummary::kNCameraOnlineFieldNumber;
const int RestGetDeviceSummary::kNHikDevTotalFieldNumber;
const int RestGetDeviceSummary::kNHikDevOnlineFieldNumber;
const int RestGetDeviceSummary::kNDhDevTotalFieldNumber;
const int RestGetDeviceSummary::kNDhDevOnlineFieldNumber;
const int RestGetDeviceSummary::kNHikIscDevTotalFieldNumber;
const int RestGetDeviceSummary::kNHikIscDevOnlineFieldNumber;
const int RestGetDeviceSummary::kNTdDevTotalFieldNumber;
const int RestGetDeviceSummary::kNTdDevOnlineFieldNumber;
const int RestGetDeviceSummary::kNGbDevTotalFieldNumber;
const int RestGetDeviceSummary::kNGbDevOnlineFieldNumber;
const int RestGetDeviceSummary::kNCloudTotalFieldNumber;
const int RestGetDeviceSummary::kNCloudOnlineFieldNumber;
const int RestGetDeviceSummary::kNRTSPRTMPTotalFieldNumber;
const int RestGetDeviceSummary::kNRTSPRTMPOnlineFieldNumber;
const int RestGetDeviceSummary::kNONVIFTotalFieldNumber;
const int RestGetDeviceSummary::kNONVIFOnlineFieldNumber;
const int RestGetDeviceSummary::kNRTMPPushTotalFieldNumber;
const int RestGetDeviceSummary::kNRTMPPushOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestGetDeviceSummary::RestGetDeviceSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestGetDeviceSummary)
}
RestGetDeviceSummary::RestGetDeviceSummary(const RestGetDeviceSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ncameratotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ncameratotal().size() > 0) {
    ncameratotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncameratotal_);
  }
  ncameraonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ncameraonline().size() > 0) {
    ncameraonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncameraonline_);
  }
  nhikdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nhikdevtotal().size() > 0) {
    nhikdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikdevtotal_);
  }
  nhikdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nhikdevonline().size() > 0) {
    nhikdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikdevonline_);
  }
  ndhdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ndhdevtotal().size() > 0) {
    ndhdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ndhdevtotal_);
  }
  ndhdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ndhdevonline().size() > 0) {
    ndhdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ndhdevonline_);
  }
  nhikiscdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nhikiscdevtotal().size() > 0) {
    nhikiscdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikiscdevtotal_);
  }
  nhikiscdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nhikiscdevonline().size() > 0) {
    nhikiscdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikiscdevonline_);
  }
  ntddevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ntddevtotal().size() > 0) {
    ntddevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntddevtotal_);
  }
  ntddevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ntddevonline().size() > 0) {
    ntddevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntddevonline_);
  }
  ngbdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ngbdevtotal().size() > 0) {
    ngbdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ngbdevtotal_);
  }
  ngbdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ngbdevonline().size() > 0) {
    ngbdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ngbdevonline_);
  }
  ncloudtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ncloudtotal().size() > 0) {
    ncloudtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncloudtotal_);
  }
  ncloudonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ncloudonline().size() > 0) {
    ncloudonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncloudonline_);
  }
  nrtsprtmptotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nrtsprtmptotal().size() > 0) {
    nrtsprtmptotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtsprtmptotal_);
  }
  nrtsprtmponline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nrtsprtmponline().size() > 0) {
    nrtsprtmponline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtsprtmponline_);
  }
  nonviftotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonviftotal().size() > 0) {
    nonviftotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonviftotal_);
  }
  nonvifonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonvifonline().size() > 0) {
    nonvifonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonvifonline_);
  }
  nrtmppushtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nrtmppushtotal().size() > 0) {
    nrtmppushtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtmppushtotal_);
  }
  nrtmppushonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nrtmppushonline().size() > 0) {
    nrtmppushonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtmppushonline_);
  }
  // @@protoc_insertion_point(copy_constructor:RestGetDeviceSummary)
}

void RestGetDeviceSummary::SharedCtor() {
  ncameratotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncameraonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmptotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmponline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonviftotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonvifonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushtotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushonline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RestGetDeviceSummary::~RestGetDeviceSummary() {
  // @@protoc_insertion_point(destructor:RestGetDeviceSummary)
  SharedDtor();
}

void RestGetDeviceSummary::SharedDtor() {
  ncameratotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncameraonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmptotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmponline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonviftotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonvifonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushtotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushonline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestGetDeviceSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestGetDeviceSummary::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[1].descriptor;
}

const RestGetDeviceSummary& RestGetDeviceSummary::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestGetDeviceSummary* RestGetDeviceSummary::New(::google::protobuf::Arena* arena) const {
  RestGetDeviceSummary* n = new RestGetDeviceSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestGetDeviceSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:RestGetDeviceSummary)
  ncameratotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncameraonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndhdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nhikiscdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntddevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ngbdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncloudonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmptotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtsprtmponline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonviftotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonvifonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nrtmppushonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RestGetDeviceSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestGetDeviceSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nCameraTotal = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncameratotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ncameratotal().data(), this->ncameratotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nCameraTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nCameraOnline = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncameraonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ncameraonline().data(), this->ncameraonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nCameraOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nHikDevTotal = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nhikdevtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nhikdevtotal().data(), this->nhikdevtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nHikDevTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nHikDevOnline = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nhikdevonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nhikdevonline().data(), this->nhikdevonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nHikDevOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nDhDevTotal = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ndhdevtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ndhdevtotal().data(), this->ndhdevtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nDhDevTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nDhDevOnline = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ndhdevonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ndhdevonline().data(), this->ndhdevonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nDhDevOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nHikIscDevTotal = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nhikiscdevtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nhikiscdevtotal().data(), this->nhikiscdevtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nHikIscDevTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nHikIscDevOnline = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nhikiscdevonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nhikiscdevonline().data(), this->nhikiscdevonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nHikIscDevOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nTdDevTotal = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ntddevtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ntddevtotal().data(), this->ntddevtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nTdDevTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nTdDevOnline = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ntddevonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ntddevonline().data(), this->ntddevonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nTdDevOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nGbDevTotal = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ngbdevtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ngbdevtotal().data(), this->ngbdevtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nGbDevTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nGbDevOnline = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ngbdevonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ngbdevonline().data(), this->ngbdevonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nGbDevOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nCloudTotal = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncloudtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ncloudtotal().data(), this->ncloudtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nCloudTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nCloudOnline = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncloudonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ncloudonline().data(), this->ncloudonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nCloudOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nRTSPRTMPTotal = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nrtsprtmptotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nrtsprtmptotal().data(), this->nrtsprtmptotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nRTSPRTMPTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nRTSPRTMPOnline = 16;
      case 16: {
        if (tag == 130u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nrtsprtmponline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nrtsprtmponline().data(), this->nrtsprtmponline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nRTSPRTMPOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nONVIFTotal = 17;
      case 17: {
        if (tag == 138u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonviftotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonviftotal().data(), this->nonviftotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nONVIFTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nONVIFOnline = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonvifonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonvifonline().data(), this->nonvifonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nONVIFOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nRTMPPushTotal = 19;
      case 19: {
        if (tag == 154u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nrtmppushtotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nrtmppushtotal().data(), this->nrtmppushtotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nRTMPPushTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nRTMPPushOnline = 20;
      case 20: {
        if (tag == 162u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nrtmppushonline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nrtmppushonline().data(), this->nrtmppushonline().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetDeviceSummary.nRTMPPushOnline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestGetDeviceSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestGetDeviceSummary)
  return false;
#undef DO_
}

void RestGetDeviceSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestGetDeviceSummary)
  // string nCameraTotal = 1;
  if (this->ncameratotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncameratotal().data(), this->ncameratotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCameraTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ncameratotal(), output);
  }

  // string nCameraOnline = 2;
  if (this->ncameraonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncameraonline().data(), this->ncameraonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCameraOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ncameraonline(), output);
  }

  // string nHikDevTotal = 3;
  if (this->nhikdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikdevtotal().data(), this->nhikdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikDevTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nhikdevtotal(), output);
  }

  // string nHikDevOnline = 4;
  if (this->nhikdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikdevonline().data(), this->nhikdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikDevOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nhikdevonline(), output);
  }

  // string nDhDevTotal = 5;
  if (this->ndhdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ndhdevtotal().data(), this->ndhdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nDhDevTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ndhdevtotal(), output);
  }

  // string nDhDevOnline = 6;
  if (this->ndhdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ndhdevonline().data(), this->ndhdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nDhDevOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ndhdevonline(), output);
  }

  // string nHikIscDevTotal = 7;
  if (this->nhikiscdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikiscdevtotal().data(), this->nhikiscdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikIscDevTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nhikiscdevtotal(), output);
  }

  // string nHikIscDevOnline = 8;
  if (this->nhikiscdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikiscdevonline().data(), this->nhikiscdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikIscDevOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nhikiscdevonline(), output);
  }

  // string nTdDevTotal = 9;
  if (this->ntddevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntddevtotal().data(), this->ntddevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nTdDevTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ntddevtotal(), output);
  }

  // string nTdDevOnline = 10;
  if (this->ntddevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntddevonline().data(), this->ntddevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nTdDevOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ntddevonline(), output);
  }

  // string nGbDevTotal = 11;
  if (this->ngbdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ngbdevtotal().data(), this->ngbdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nGbDevTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->ngbdevtotal(), output);
  }

  // string nGbDevOnline = 12;
  if (this->ngbdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ngbdevonline().data(), this->ngbdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nGbDevOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ngbdevonline(), output);
  }

  // string nCloudTotal = 13;
  if (this->ncloudtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncloudtotal().data(), this->ncloudtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCloudTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->ncloudtotal(), output);
  }

  // string nCloudOnline = 14;
  if (this->ncloudonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncloudonline().data(), this->ncloudonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCloudOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->ncloudonline(), output);
  }

  // string nRTSPRTMPTotal = 15;
  if (this->nrtsprtmptotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtsprtmptotal().data(), this->nrtsprtmptotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTSPRTMPTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->nrtsprtmptotal(), output);
  }

  // string nRTSPRTMPOnline = 16;
  if (this->nrtsprtmponline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtsprtmponline().data(), this->nrtsprtmponline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTSPRTMPOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->nrtsprtmponline(), output);
  }

  // string nONVIFTotal = 17;
  if (this->nonviftotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonviftotal().data(), this->nonviftotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nONVIFTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->nonviftotal(), output);
  }

  // string nONVIFOnline = 18;
  if (this->nonvifonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonvifonline().data(), this->nonvifonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nONVIFOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->nonvifonline(), output);
  }

  // string nRTMPPushTotal = 19;
  if (this->nrtmppushtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtmppushtotal().data(), this->nrtmppushtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTMPPushTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->nrtmppushtotal(), output);
  }

  // string nRTMPPushOnline = 20;
  if (this->nrtmppushonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtmppushonline().data(), this->nrtmppushonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTMPPushOnline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->nrtmppushonline(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestGetDeviceSummary)
}

::google::protobuf::uint8* RestGetDeviceSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestGetDeviceSummary)
  // string nCameraTotal = 1;
  if (this->ncameratotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncameratotal().data(), this->ncameratotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCameraTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ncameratotal(), target);
  }

  // string nCameraOnline = 2;
  if (this->ncameraonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncameraonline().data(), this->ncameraonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCameraOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ncameraonline(), target);
  }

  // string nHikDevTotal = 3;
  if (this->nhikdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikdevtotal().data(), this->nhikdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikDevTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nhikdevtotal(), target);
  }

  // string nHikDevOnline = 4;
  if (this->nhikdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikdevonline().data(), this->nhikdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikDevOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nhikdevonline(), target);
  }

  // string nDhDevTotal = 5;
  if (this->ndhdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ndhdevtotal().data(), this->ndhdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nDhDevTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ndhdevtotal(), target);
  }

  // string nDhDevOnline = 6;
  if (this->ndhdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ndhdevonline().data(), this->ndhdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nDhDevOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ndhdevonline(), target);
  }

  // string nHikIscDevTotal = 7;
  if (this->nhikiscdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikiscdevtotal().data(), this->nhikiscdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikIscDevTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nhikiscdevtotal(), target);
  }

  // string nHikIscDevOnline = 8;
  if (this->nhikiscdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nhikiscdevonline().data(), this->nhikiscdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nHikIscDevOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nhikiscdevonline(), target);
  }

  // string nTdDevTotal = 9;
  if (this->ntddevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntddevtotal().data(), this->ntddevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nTdDevTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ntddevtotal(), target);
  }

  // string nTdDevOnline = 10;
  if (this->ntddevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntddevonline().data(), this->ntddevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nTdDevOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ntddevonline(), target);
  }

  // string nGbDevTotal = 11;
  if (this->ngbdevtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ngbdevtotal().data(), this->ngbdevtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nGbDevTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->ngbdevtotal(), target);
  }

  // string nGbDevOnline = 12;
  if (this->ngbdevonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ngbdevonline().data(), this->ngbdevonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nGbDevOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ngbdevonline(), target);
  }

  // string nCloudTotal = 13;
  if (this->ncloudtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncloudtotal().data(), this->ncloudtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCloudTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->ncloudtotal(), target);
  }

  // string nCloudOnline = 14;
  if (this->ncloudonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncloudonline().data(), this->ncloudonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nCloudOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->ncloudonline(), target);
  }

  // string nRTSPRTMPTotal = 15;
  if (this->nrtsprtmptotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtsprtmptotal().data(), this->nrtsprtmptotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTSPRTMPTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->nrtsprtmptotal(), target);
  }

  // string nRTSPRTMPOnline = 16;
  if (this->nrtsprtmponline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtsprtmponline().data(), this->nrtsprtmponline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTSPRTMPOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->nrtsprtmponline(), target);
  }

  // string nONVIFTotal = 17;
  if (this->nonviftotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonviftotal().data(), this->nonviftotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nONVIFTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->nonviftotal(), target);
  }

  // string nONVIFOnline = 18;
  if (this->nonvifonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonvifonline().data(), this->nonvifonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nONVIFOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->nonvifonline(), target);
  }

  // string nRTMPPushTotal = 19;
  if (this->nrtmppushtotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtmppushtotal().data(), this->nrtmppushtotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTMPPushTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->nrtmppushtotal(), target);
  }

  // string nRTMPPushOnline = 20;
  if (this->nrtmppushonline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nrtmppushonline().data(), this->nrtmppushonline().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetDeviceSummary.nRTMPPushOnline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->nrtmppushonline(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestGetDeviceSummary)
  return target;
}

size_t RestGetDeviceSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestGetDeviceSummary)
  size_t total_size = 0;

  // string nCameraTotal = 1;
  if (this->ncameratotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncameratotal());
  }

  // string nCameraOnline = 2;
  if (this->ncameraonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncameraonline());
  }

  // string nHikDevTotal = 3;
  if (this->nhikdevtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nhikdevtotal());
  }

  // string nHikDevOnline = 4;
  if (this->nhikdevonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nhikdevonline());
  }

  // string nDhDevTotal = 5;
  if (this->ndhdevtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ndhdevtotal());
  }

  // string nDhDevOnline = 6;
  if (this->ndhdevonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ndhdevonline());
  }

  // string nHikIscDevTotal = 7;
  if (this->nhikiscdevtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nhikiscdevtotal());
  }

  // string nHikIscDevOnline = 8;
  if (this->nhikiscdevonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nhikiscdevonline());
  }

  // string nTdDevTotal = 9;
  if (this->ntddevtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ntddevtotal());
  }

  // string nTdDevOnline = 10;
  if (this->ntddevonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ntddevonline());
  }

  // string nGbDevTotal = 11;
  if (this->ngbdevtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ngbdevtotal());
  }

  // string nGbDevOnline = 12;
  if (this->ngbdevonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ngbdevonline());
  }

  // string nCloudTotal = 13;
  if (this->ncloudtotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncloudtotal());
  }

  // string nCloudOnline = 14;
  if (this->ncloudonline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncloudonline());
  }

  // string nRTSPRTMPTotal = 15;
  if (this->nrtsprtmptotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nrtsprtmptotal());
  }

  // string nRTSPRTMPOnline = 16;
  if (this->nrtsprtmponline().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nrtsprtmponline());
  }

  // string nONVIFTotal = 17;
  if (this->nonviftotal().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonviftotal());
  }

  // string nONVIFOnline = 18;
  if (this->nonvifonline().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonvifonline());
  }

  // string nRTMPPushTotal = 19;
  if (this->nrtmppushtotal().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nrtmppushtotal());
  }

  // string nRTMPPushOnline = 20;
  if (this->nrtmppushonline().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nrtmppushonline());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestGetDeviceSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestGetDeviceSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const RestGetDeviceSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestGetDeviceSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestGetDeviceSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestGetDeviceSummary)
    MergeFrom(*source);
  }
}

void RestGetDeviceSummary::MergeFrom(const RestGetDeviceSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestGetDeviceSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ncameratotal().size() > 0) {

    ncameratotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncameratotal_);
  }
  if (from.ncameraonline().size() > 0) {

    ncameraonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncameraonline_);
  }
  if (from.nhikdevtotal().size() > 0) {

    nhikdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikdevtotal_);
  }
  if (from.nhikdevonline().size() > 0) {

    nhikdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikdevonline_);
  }
  if (from.ndhdevtotal().size() > 0) {

    ndhdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ndhdevtotal_);
  }
  if (from.ndhdevonline().size() > 0) {

    ndhdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ndhdevonline_);
  }
  if (from.nhikiscdevtotal().size() > 0) {

    nhikiscdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikiscdevtotal_);
  }
  if (from.nhikiscdevonline().size() > 0) {

    nhikiscdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nhikiscdevonline_);
  }
  if (from.ntddevtotal().size() > 0) {

    ntddevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntddevtotal_);
  }
  if (from.ntddevonline().size() > 0) {

    ntddevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntddevonline_);
  }
  if (from.ngbdevtotal().size() > 0) {

    ngbdevtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ngbdevtotal_);
  }
  if (from.ngbdevonline().size() > 0) {

    ngbdevonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ngbdevonline_);
  }
  if (from.ncloudtotal().size() > 0) {

    ncloudtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncloudtotal_);
  }
  if (from.ncloudonline().size() > 0) {

    ncloudonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncloudonline_);
  }
  if (from.nrtsprtmptotal().size() > 0) {

    nrtsprtmptotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtsprtmptotal_);
  }
  if (from.nrtsprtmponline().size() > 0) {

    nrtsprtmponline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtsprtmponline_);
  }
  if (from.nonviftotal().size() > 0) {

    nonviftotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonviftotal_);
  }
  if (from.nonvifonline().size() > 0) {

    nonvifonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonvifonline_);
  }
  if (from.nrtmppushtotal().size() > 0) {

    nrtmppushtotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtmppushtotal_);
  }
  if (from.nrtmppushonline().size() > 0) {

    nrtmppushonline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nrtmppushonline_);
  }
}

void RestGetDeviceSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestGetDeviceSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestGetDeviceSummary::CopyFrom(const RestGetDeviceSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestGetDeviceSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestGetDeviceSummary::IsInitialized() const {
  return true;
}

void RestGetDeviceSummary::Swap(RestGetDeviceSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestGetDeviceSummary::InternalSwap(RestGetDeviceSummary* other) {
  ncameratotal_.Swap(&other->ncameratotal_);
  ncameraonline_.Swap(&other->ncameraonline_);
  nhikdevtotal_.Swap(&other->nhikdevtotal_);
  nhikdevonline_.Swap(&other->nhikdevonline_);
  ndhdevtotal_.Swap(&other->ndhdevtotal_);
  ndhdevonline_.Swap(&other->ndhdevonline_);
  nhikiscdevtotal_.Swap(&other->nhikiscdevtotal_);
  nhikiscdevonline_.Swap(&other->nhikiscdevonline_);
  ntddevtotal_.Swap(&other->ntddevtotal_);
  ntddevonline_.Swap(&other->ntddevonline_);
  ngbdevtotal_.Swap(&other->ngbdevtotal_);
  ngbdevonline_.Swap(&other->ngbdevonline_);
  ncloudtotal_.Swap(&other->ncloudtotal_);
  ncloudonline_.Swap(&other->ncloudonline_);
  nrtsprtmptotal_.Swap(&other->nrtsprtmptotal_);
  nrtsprtmponline_.Swap(&other->nrtsprtmponline_);
  nonviftotal_.Swap(&other->nonviftotal_);
  nonvifonline_.Swap(&other->nonvifonline_);
  nrtmppushtotal_.Swap(&other->nrtmppushtotal_);
  nrtmppushonline_.Swap(&other->nrtmppushonline_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestGetDeviceSummary::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestGetDeviceSummary

// string nCameraTotal = 1;
void RestGetDeviceSummary::clear_ncameratotal() {
  ncameratotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ncameratotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nCameraTotal)
  return ncameratotal_.GetNoArena();
}
void RestGetDeviceSummary::set_ncameratotal(const ::std::string& value) {
  
  ncameratotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nCameraTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ncameratotal(::std::string&& value) {
  
  ncameratotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nCameraTotal)
}
#endif
void RestGetDeviceSummary::set_ncameratotal(const char* value) {
  
  ncameratotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nCameraTotal)
}
void RestGetDeviceSummary::set_ncameratotal(const char* value, size_t size) {
  
  ncameratotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nCameraTotal)
}
::std::string* RestGetDeviceSummary::mutable_ncameratotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nCameraTotal)
  return ncameratotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ncameratotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nCameraTotal)
  
  return ncameratotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ncameratotal(::std::string* ncameratotal) {
  if (ncameratotal != NULL) {
    
  } else {
    
  }
  ncameratotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncameratotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nCameraTotal)
}

// string nCameraOnline = 2;
void RestGetDeviceSummary::clear_ncameraonline() {
  ncameraonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ncameraonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nCameraOnline)
  return ncameraonline_.GetNoArena();
}
void RestGetDeviceSummary::set_ncameraonline(const ::std::string& value) {
  
  ncameraonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nCameraOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ncameraonline(::std::string&& value) {
  
  ncameraonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nCameraOnline)
}
#endif
void RestGetDeviceSummary::set_ncameraonline(const char* value) {
  
  ncameraonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nCameraOnline)
}
void RestGetDeviceSummary::set_ncameraonline(const char* value, size_t size) {
  
  ncameraonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nCameraOnline)
}
::std::string* RestGetDeviceSummary::mutable_ncameraonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nCameraOnline)
  return ncameraonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ncameraonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nCameraOnline)
  
  return ncameraonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ncameraonline(::std::string* ncameraonline) {
  if (ncameraonline != NULL) {
    
  } else {
    
  }
  ncameraonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncameraonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nCameraOnline)
}

// string nHikDevTotal = 3;
void RestGetDeviceSummary::clear_nhikdevtotal() {
  nhikdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nhikdevtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nHikDevTotal)
  return nhikdevtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_nhikdevtotal(const ::std::string& value) {
  
  nhikdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nHikDevTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nhikdevtotal(::std::string&& value) {
  
  nhikdevtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nHikDevTotal)
}
#endif
void RestGetDeviceSummary::set_nhikdevtotal(const char* value) {
  
  nhikdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nHikDevTotal)
}
void RestGetDeviceSummary::set_nhikdevtotal(const char* value, size_t size) {
  
  nhikdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nHikDevTotal)
}
::std::string* RestGetDeviceSummary::mutable_nhikdevtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nHikDevTotal)
  return nhikdevtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nhikdevtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nHikDevTotal)
  
  return nhikdevtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nhikdevtotal(::std::string* nhikdevtotal) {
  if (nhikdevtotal != NULL) {
    
  } else {
    
  }
  nhikdevtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nhikdevtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nHikDevTotal)
}

// string nHikDevOnline = 4;
void RestGetDeviceSummary::clear_nhikdevonline() {
  nhikdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nhikdevonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nHikDevOnline)
  return nhikdevonline_.GetNoArena();
}
void RestGetDeviceSummary::set_nhikdevonline(const ::std::string& value) {
  
  nhikdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nHikDevOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nhikdevonline(::std::string&& value) {
  
  nhikdevonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nHikDevOnline)
}
#endif
void RestGetDeviceSummary::set_nhikdevonline(const char* value) {
  
  nhikdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nHikDevOnline)
}
void RestGetDeviceSummary::set_nhikdevonline(const char* value, size_t size) {
  
  nhikdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nHikDevOnline)
}
::std::string* RestGetDeviceSummary::mutable_nhikdevonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nHikDevOnline)
  return nhikdevonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nhikdevonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nHikDevOnline)
  
  return nhikdevonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nhikdevonline(::std::string* nhikdevonline) {
  if (nhikdevonline != NULL) {
    
  } else {
    
  }
  nhikdevonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nhikdevonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nHikDevOnline)
}

// string nDhDevTotal = 5;
void RestGetDeviceSummary::clear_ndhdevtotal() {
  ndhdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ndhdevtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nDhDevTotal)
  return ndhdevtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_ndhdevtotal(const ::std::string& value) {
  
  ndhdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nDhDevTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ndhdevtotal(::std::string&& value) {
  
  ndhdevtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nDhDevTotal)
}
#endif
void RestGetDeviceSummary::set_ndhdevtotal(const char* value) {
  
  ndhdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nDhDevTotal)
}
void RestGetDeviceSummary::set_ndhdevtotal(const char* value, size_t size) {
  
  ndhdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nDhDevTotal)
}
::std::string* RestGetDeviceSummary::mutable_ndhdevtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nDhDevTotal)
  return ndhdevtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ndhdevtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nDhDevTotal)
  
  return ndhdevtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ndhdevtotal(::std::string* ndhdevtotal) {
  if (ndhdevtotal != NULL) {
    
  } else {
    
  }
  ndhdevtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ndhdevtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nDhDevTotal)
}

// string nDhDevOnline = 6;
void RestGetDeviceSummary::clear_ndhdevonline() {
  ndhdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ndhdevonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nDhDevOnline)
  return ndhdevonline_.GetNoArena();
}
void RestGetDeviceSummary::set_ndhdevonline(const ::std::string& value) {
  
  ndhdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nDhDevOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ndhdevonline(::std::string&& value) {
  
  ndhdevonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nDhDevOnline)
}
#endif
void RestGetDeviceSummary::set_ndhdevonline(const char* value) {
  
  ndhdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nDhDevOnline)
}
void RestGetDeviceSummary::set_ndhdevonline(const char* value, size_t size) {
  
  ndhdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nDhDevOnline)
}
::std::string* RestGetDeviceSummary::mutable_ndhdevonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nDhDevOnline)
  return ndhdevonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ndhdevonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nDhDevOnline)
  
  return ndhdevonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ndhdevonline(::std::string* ndhdevonline) {
  if (ndhdevonline != NULL) {
    
  } else {
    
  }
  ndhdevonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ndhdevonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nDhDevOnline)
}

// string nHikIscDevTotal = 7;
void RestGetDeviceSummary::clear_nhikiscdevtotal() {
  nhikiscdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nhikiscdevtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nHikIscDevTotal)
  return nhikiscdevtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_nhikiscdevtotal(const ::std::string& value) {
  
  nhikiscdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nHikIscDevTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nhikiscdevtotal(::std::string&& value) {
  
  nhikiscdevtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nHikIscDevTotal)
}
#endif
void RestGetDeviceSummary::set_nhikiscdevtotal(const char* value) {
  
  nhikiscdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nHikIscDevTotal)
}
void RestGetDeviceSummary::set_nhikiscdevtotal(const char* value, size_t size) {
  
  nhikiscdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nHikIscDevTotal)
}
::std::string* RestGetDeviceSummary::mutable_nhikiscdevtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nHikIscDevTotal)
  return nhikiscdevtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nhikiscdevtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nHikIscDevTotal)
  
  return nhikiscdevtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nhikiscdevtotal(::std::string* nhikiscdevtotal) {
  if (nhikiscdevtotal != NULL) {
    
  } else {
    
  }
  nhikiscdevtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nhikiscdevtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nHikIscDevTotal)
}

// string nHikIscDevOnline = 8;
void RestGetDeviceSummary::clear_nhikiscdevonline() {
  nhikiscdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nhikiscdevonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nHikIscDevOnline)
  return nhikiscdevonline_.GetNoArena();
}
void RestGetDeviceSummary::set_nhikiscdevonline(const ::std::string& value) {
  
  nhikiscdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nHikIscDevOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nhikiscdevonline(::std::string&& value) {
  
  nhikiscdevonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nHikIscDevOnline)
}
#endif
void RestGetDeviceSummary::set_nhikiscdevonline(const char* value) {
  
  nhikiscdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nHikIscDevOnline)
}
void RestGetDeviceSummary::set_nhikiscdevonline(const char* value, size_t size) {
  
  nhikiscdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nHikIscDevOnline)
}
::std::string* RestGetDeviceSummary::mutable_nhikiscdevonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nHikIscDevOnline)
  return nhikiscdevonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nhikiscdevonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nHikIscDevOnline)
  
  return nhikiscdevonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nhikiscdevonline(::std::string* nhikiscdevonline) {
  if (nhikiscdevonline != NULL) {
    
  } else {
    
  }
  nhikiscdevonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nhikiscdevonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nHikIscDevOnline)
}

// string nTdDevTotal = 9;
void RestGetDeviceSummary::clear_ntddevtotal() {
  ntddevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ntddevtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nTdDevTotal)
  return ntddevtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_ntddevtotal(const ::std::string& value) {
  
  ntddevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nTdDevTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ntddevtotal(::std::string&& value) {
  
  ntddevtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nTdDevTotal)
}
#endif
void RestGetDeviceSummary::set_ntddevtotal(const char* value) {
  
  ntddevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nTdDevTotal)
}
void RestGetDeviceSummary::set_ntddevtotal(const char* value, size_t size) {
  
  ntddevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nTdDevTotal)
}
::std::string* RestGetDeviceSummary::mutable_ntddevtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nTdDevTotal)
  return ntddevtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ntddevtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nTdDevTotal)
  
  return ntddevtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ntddevtotal(::std::string* ntddevtotal) {
  if (ntddevtotal != NULL) {
    
  } else {
    
  }
  ntddevtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ntddevtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nTdDevTotal)
}

// string nTdDevOnline = 10;
void RestGetDeviceSummary::clear_ntddevonline() {
  ntddevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ntddevonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nTdDevOnline)
  return ntddevonline_.GetNoArena();
}
void RestGetDeviceSummary::set_ntddevonline(const ::std::string& value) {
  
  ntddevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nTdDevOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ntddevonline(::std::string&& value) {
  
  ntddevonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nTdDevOnline)
}
#endif
void RestGetDeviceSummary::set_ntddevonline(const char* value) {
  
  ntddevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nTdDevOnline)
}
void RestGetDeviceSummary::set_ntddevonline(const char* value, size_t size) {
  
  ntddevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nTdDevOnline)
}
::std::string* RestGetDeviceSummary::mutable_ntddevonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nTdDevOnline)
  return ntddevonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ntddevonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nTdDevOnline)
  
  return ntddevonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ntddevonline(::std::string* ntddevonline) {
  if (ntddevonline != NULL) {
    
  } else {
    
  }
  ntddevonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ntddevonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nTdDevOnline)
}

// string nGbDevTotal = 11;
void RestGetDeviceSummary::clear_ngbdevtotal() {
  ngbdevtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ngbdevtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nGbDevTotal)
  return ngbdevtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_ngbdevtotal(const ::std::string& value) {
  
  ngbdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nGbDevTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ngbdevtotal(::std::string&& value) {
  
  ngbdevtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nGbDevTotal)
}
#endif
void RestGetDeviceSummary::set_ngbdevtotal(const char* value) {
  
  ngbdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nGbDevTotal)
}
void RestGetDeviceSummary::set_ngbdevtotal(const char* value, size_t size) {
  
  ngbdevtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nGbDevTotal)
}
::std::string* RestGetDeviceSummary::mutable_ngbdevtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nGbDevTotal)
  return ngbdevtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ngbdevtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nGbDevTotal)
  
  return ngbdevtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ngbdevtotal(::std::string* ngbdevtotal) {
  if (ngbdevtotal != NULL) {
    
  } else {
    
  }
  ngbdevtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ngbdevtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nGbDevTotal)
}

// string nGbDevOnline = 12;
void RestGetDeviceSummary::clear_ngbdevonline() {
  ngbdevonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ngbdevonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nGbDevOnline)
  return ngbdevonline_.GetNoArena();
}
void RestGetDeviceSummary::set_ngbdevonline(const ::std::string& value) {
  
  ngbdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nGbDevOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ngbdevonline(::std::string&& value) {
  
  ngbdevonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nGbDevOnline)
}
#endif
void RestGetDeviceSummary::set_ngbdevonline(const char* value) {
  
  ngbdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nGbDevOnline)
}
void RestGetDeviceSummary::set_ngbdevonline(const char* value, size_t size) {
  
  ngbdevonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nGbDevOnline)
}
::std::string* RestGetDeviceSummary::mutable_ngbdevonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nGbDevOnline)
  return ngbdevonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ngbdevonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nGbDevOnline)
  
  return ngbdevonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ngbdevonline(::std::string* ngbdevonline) {
  if (ngbdevonline != NULL) {
    
  } else {
    
  }
  ngbdevonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ngbdevonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nGbDevOnline)
}

// string nCloudTotal = 13;
void RestGetDeviceSummary::clear_ncloudtotal() {
  ncloudtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ncloudtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nCloudTotal)
  return ncloudtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_ncloudtotal(const ::std::string& value) {
  
  ncloudtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nCloudTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ncloudtotal(::std::string&& value) {
  
  ncloudtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nCloudTotal)
}
#endif
void RestGetDeviceSummary::set_ncloudtotal(const char* value) {
  
  ncloudtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nCloudTotal)
}
void RestGetDeviceSummary::set_ncloudtotal(const char* value, size_t size) {
  
  ncloudtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nCloudTotal)
}
::std::string* RestGetDeviceSummary::mutable_ncloudtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nCloudTotal)
  return ncloudtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ncloudtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nCloudTotal)
  
  return ncloudtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ncloudtotal(::std::string* ncloudtotal) {
  if (ncloudtotal != NULL) {
    
  } else {
    
  }
  ncloudtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncloudtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nCloudTotal)
}

// string nCloudOnline = 14;
void RestGetDeviceSummary::clear_ncloudonline() {
  ncloudonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::ncloudonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nCloudOnline)
  return ncloudonline_.GetNoArena();
}
void RestGetDeviceSummary::set_ncloudonline(const ::std::string& value) {
  
  ncloudonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nCloudOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_ncloudonline(::std::string&& value) {
  
  ncloudonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nCloudOnline)
}
#endif
void RestGetDeviceSummary::set_ncloudonline(const char* value) {
  
  ncloudonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nCloudOnline)
}
void RestGetDeviceSummary::set_ncloudonline(const char* value, size_t size) {
  
  ncloudonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nCloudOnline)
}
::std::string* RestGetDeviceSummary::mutable_ncloudonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nCloudOnline)
  return ncloudonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_ncloudonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nCloudOnline)
  
  return ncloudonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_ncloudonline(::std::string* ncloudonline) {
  if (ncloudonline != NULL) {
    
  } else {
    
  }
  ncloudonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncloudonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nCloudOnline)
}

// string nRTSPRTMPTotal = 15;
void RestGetDeviceSummary::clear_nrtsprtmptotal() {
  nrtsprtmptotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nrtsprtmptotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nRTSPRTMPTotal)
  return nrtsprtmptotal_.GetNoArena();
}
void RestGetDeviceSummary::set_nrtsprtmptotal(const ::std::string& value) {
  
  nrtsprtmptotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nRTSPRTMPTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nrtsprtmptotal(::std::string&& value) {
  
  nrtsprtmptotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nRTSPRTMPTotal)
}
#endif
void RestGetDeviceSummary::set_nrtsprtmptotal(const char* value) {
  
  nrtsprtmptotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nRTSPRTMPTotal)
}
void RestGetDeviceSummary::set_nrtsprtmptotal(const char* value, size_t size) {
  
  nrtsprtmptotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nRTSPRTMPTotal)
}
::std::string* RestGetDeviceSummary::mutable_nrtsprtmptotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nRTSPRTMPTotal)
  return nrtsprtmptotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nrtsprtmptotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nRTSPRTMPTotal)
  
  return nrtsprtmptotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nrtsprtmptotal(::std::string* nrtsprtmptotal) {
  if (nrtsprtmptotal != NULL) {
    
  } else {
    
  }
  nrtsprtmptotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nrtsprtmptotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nRTSPRTMPTotal)
}

// string nRTSPRTMPOnline = 16;
void RestGetDeviceSummary::clear_nrtsprtmponline() {
  nrtsprtmponline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nrtsprtmponline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nRTSPRTMPOnline)
  return nrtsprtmponline_.GetNoArena();
}
void RestGetDeviceSummary::set_nrtsprtmponline(const ::std::string& value) {
  
  nrtsprtmponline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nRTSPRTMPOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nrtsprtmponline(::std::string&& value) {
  
  nrtsprtmponline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nRTSPRTMPOnline)
}
#endif
void RestGetDeviceSummary::set_nrtsprtmponline(const char* value) {
  
  nrtsprtmponline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nRTSPRTMPOnline)
}
void RestGetDeviceSummary::set_nrtsprtmponline(const char* value, size_t size) {
  
  nrtsprtmponline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nRTSPRTMPOnline)
}
::std::string* RestGetDeviceSummary::mutable_nrtsprtmponline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nRTSPRTMPOnline)
  return nrtsprtmponline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nrtsprtmponline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nRTSPRTMPOnline)
  
  return nrtsprtmponline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nrtsprtmponline(::std::string* nrtsprtmponline) {
  if (nrtsprtmponline != NULL) {
    
  } else {
    
  }
  nrtsprtmponline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nrtsprtmponline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nRTSPRTMPOnline)
}

// string nONVIFTotal = 17;
void RestGetDeviceSummary::clear_nonviftotal() {
  nonviftotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nonviftotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nONVIFTotal)
  return nonviftotal_.GetNoArena();
}
void RestGetDeviceSummary::set_nonviftotal(const ::std::string& value) {
  
  nonviftotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nONVIFTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nonviftotal(::std::string&& value) {
  
  nonviftotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nONVIFTotal)
}
#endif
void RestGetDeviceSummary::set_nonviftotal(const char* value) {
  
  nonviftotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nONVIFTotal)
}
void RestGetDeviceSummary::set_nonviftotal(const char* value, size_t size) {
  
  nonviftotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nONVIFTotal)
}
::std::string* RestGetDeviceSummary::mutable_nonviftotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nONVIFTotal)
  return nonviftotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nonviftotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nONVIFTotal)
  
  return nonviftotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nonviftotal(::std::string* nonviftotal) {
  if (nonviftotal != NULL) {
    
  } else {
    
  }
  nonviftotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonviftotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nONVIFTotal)
}

// string nONVIFOnline = 18;
void RestGetDeviceSummary::clear_nonvifonline() {
  nonvifonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nonvifonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nONVIFOnline)
  return nonvifonline_.GetNoArena();
}
void RestGetDeviceSummary::set_nonvifonline(const ::std::string& value) {
  
  nonvifonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nONVIFOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nonvifonline(::std::string&& value) {
  
  nonvifonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nONVIFOnline)
}
#endif
void RestGetDeviceSummary::set_nonvifonline(const char* value) {
  
  nonvifonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nONVIFOnline)
}
void RestGetDeviceSummary::set_nonvifonline(const char* value, size_t size) {
  
  nonvifonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nONVIFOnline)
}
::std::string* RestGetDeviceSummary::mutable_nonvifonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nONVIFOnline)
  return nonvifonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nonvifonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nONVIFOnline)
  
  return nonvifonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nonvifonline(::std::string* nonvifonline) {
  if (nonvifonline != NULL) {
    
  } else {
    
  }
  nonvifonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonvifonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nONVIFOnline)
}

// string nRTMPPushTotal = 19;
void RestGetDeviceSummary::clear_nrtmppushtotal() {
  nrtmppushtotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nrtmppushtotal() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nRTMPPushTotal)
  return nrtmppushtotal_.GetNoArena();
}
void RestGetDeviceSummary::set_nrtmppushtotal(const ::std::string& value) {
  
  nrtmppushtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nRTMPPushTotal)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nrtmppushtotal(::std::string&& value) {
  
  nrtmppushtotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nRTMPPushTotal)
}
#endif
void RestGetDeviceSummary::set_nrtmppushtotal(const char* value) {
  
  nrtmppushtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nRTMPPushTotal)
}
void RestGetDeviceSummary::set_nrtmppushtotal(const char* value, size_t size) {
  
  nrtmppushtotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nRTMPPushTotal)
}
::std::string* RestGetDeviceSummary::mutable_nrtmppushtotal() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nRTMPPushTotal)
  return nrtmppushtotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nrtmppushtotal() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nRTMPPushTotal)
  
  return nrtmppushtotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nrtmppushtotal(::std::string* nrtmppushtotal) {
  if (nrtmppushtotal != NULL) {
    
  } else {
    
  }
  nrtmppushtotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nrtmppushtotal);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nRTMPPushTotal)
}

// string nRTMPPushOnline = 20;
void RestGetDeviceSummary::clear_nrtmppushonline() {
  nrtmppushonline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetDeviceSummary::nrtmppushonline() const {
  // @@protoc_insertion_point(field_get:RestGetDeviceSummary.nRTMPPushOnline)
  return nrtmppushonline_.GetNoArena();
}
void RestGetDeviceSummary::set_nrtmppushonline(const ::std::string& value) {
  
  nrtmppushonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetDeviceSummary.nRTMPPushOnline)
}
#if LANG_CXX11
void RestGetDeviceSummary::set_nrtmppushonline(::std::string&& value) {
  
  nrtmppushonline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetDeviceSummary.nRTMPPushOnline)
}
#endif
void RestGetDeviceSummary::set_nrtmppushonline(const char* value) {
  
  nrtmppushonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetDeviceSummary.nRTMPPushOnline)
}
void RestGetDeviceSummary::set_nrtmppushonline(const char* value, size_t size) {
  
  nrtmppushonline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetDeviceSummary.nRTMPPushOnline)
}
::std::string* RestGetDeviceSummary::mutable_nrtmppushonline() {
  
  // @@protoc_insertion_point(field_mutable:RestGetDeviceSummary.nRTMPPushOnline)
  return nrtmppushonline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetDeviceSummary::release_nrtmppushonline() {
  // @@protoc_insertion_point(field_release:RestGetDeviceSummary.nRTMPPushOnline)
  
  return nrtmppushonline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetDeviceSummary::set_allocated_nrtmppushonline(::std::string* nrtmppushonline) {
  if (nrtmppushonline != NULL) {
    
  } else {
    
  }
  nrtmppushonline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nrtmppushonline);
  // @@protoc_insertion_point(field_set_allocated:RestGetDeviceSummary.nRTMPPushOnline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestGetRunInfo::kStrRunTimeFieldNumber;
const int RestGetRunInfo::kStrCPUFieldNumber;
const int RestGetRunInfo::kStrMemoryFieldNumber;
const int RestGetRunInfo::kStrNetworkInFieldNumber;
const int RestGetRunInfo::kStrNetworkOutFieldNumber;
const int RestGetRunInfo::kStrTotalSpaceFieldNumber;
const int RestGetRunInfo::kStrFreeSpaceFieldNumber;
const int RestGetRunInfo::kNRunTimeSecFieldNumber;
const int RestGetRunInfo::kNCPUUsageFieldNumber;
const int RestGetRunInfo::kNMemoryUsageFieldNumber;
const int RestGetRunInfo::kNTotalMemoryByteFieldNumber;
const int RestGetRunInfo::kNNetworkInKFieldNumber;
const int RestGetRunInfo::kNNetworkOutKFieldNumber;
const int RestGetRunInfo::kNTotalSpaceByteFieldNumber;
const int RestGetRunInfo::kNFreeSpaceByteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestGetRunInfo::RestGetRunInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestGetRunInfo)
}
RestGetRunInfo::RestGetRunInfo(const RestGetRunInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strruntime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strruntime().size() > 0) {
    strruntime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strruntime_);
  }
  strcpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcpu().size() > 0) {
    strcpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcpu_);
  }
  strmemory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strmemory().size() > 0) {
    strmemory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmemory_);
  }
  strnetworkin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strnetworkin().size() > 0) {
    strnetworkin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strnetworkin_);
  }
  strnetworkout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strnetworkout().size() > 0) {
    strnetworkout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strnetworkout_);
  }
  strtotalspace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strtotalspace().size() > 0) {
    strtotalspace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtotalspace_);
  }
  strfreespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strfreespace().size() > 0) {
    strfreespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfreespace_);
  }
  nruntimesec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nruntimesec().size() > 0) {
    nruntimesec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nruntimesec_);
  }
  ncpuusage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ncpuusage().size() > 0) {
    ncpuusage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncpuusage_);
  }
  nmemoryusage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nmemoryusage().size() > 0) {
    nmemoryusage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nmemoryusage_);
  }
  ntotalmemorybyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ntotalmemorybyte().size() > 0) {
    ntotalmemorybyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntotalmemorybyte_);
  }
  nnetworkink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nnetworkink().size() > 0) {
    nnetworkink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nnetworkink_);
  }
  nnetworkoutk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nnetworkoutk().size() > 0) {
    nnetworkoutk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nnetworkoutk_);
  }
  ntotalspacebyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ntotalspacebyte().size() > 0) {
    ntotalspacebyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntotalspacebyte_);
  }
  nfreespacebyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nfreespacebyte().size() > 0) {
    nfreespacebyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nfreespacebyte_);
  }
  // @@protoc_insertion_point(copy_constructor:RestGetRunInfo)
}

void RestGetRunInfo::SharedCtor() {
  strruntime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmemory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtotalspace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfreespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nruntimesec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncpuusage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmemoryusage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalmemorybyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkoutk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalspacebyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nfreespacebyte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RestGetRunInfo::~RestGetRunInfo() {
  // @@protoc_insertion_point(destructor:RestGetRunInfo)
  SharedDtor();
}

void RestGetRunInfo::SharedDtor() {
  strruntime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmemory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtotalspace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfreespace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nruntimesec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncpuusage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmemoryusage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalmemorybyte_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkink_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkoutk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalspacebyte_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nfreespacebyte_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestGetRunInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestGetRunInfo::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[2].descriptor;
}

const RestGetRunInfo& RestGetRunInfo::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestGetRunInfo* RestGetRunInfo::New(::google::protobuf::Arena* arena) const {
  RestGetRunInfo* n = new RestGetRunInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestGetRunInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RestGetRunInfo)
  strruntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strmemory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strnetworkout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strtotalspace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strfreespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nruntimesec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncpuusage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmemoryusage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalmemorybyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nnetworkoutk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotalspacebyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nfreespacebyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RestGetRunInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestGetRunInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strRunTime = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strruntime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strruntime().data(), this->strruntime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strRunTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCPU = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcpu().data(), this->strcpu().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strCPU"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strMemory = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmemory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strmemory().data(), this->strmemory().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strMemory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strNetworkIn = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strnetworkin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strnetworkin().data(), this->strnetworkin().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strNetworkIn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strNetworkOut = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strnetworkout()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strnetworkout().data(), this->strnetworkout().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strNetworkOut"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strTotalSpace = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strtotalspace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strtotalspace().data(), this->strtotalspace().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strTotalSpace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strFreeSpace = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strfreespace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strfreespace().data(), this->strfreespace().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.strFreeSpace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nRunTimeSec = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nruntimesec()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nruntimesec().data(), this->nruntimesec().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nRunTimeSec"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nCPUUsage = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncpuusage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ncpuusage().data(), this->ncpuusage().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nCPUUsage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nMemoryUsage = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nmemoryusage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nmemoryusage().data(), this->nmemoryusage().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nMemoryUsage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nTotalMemoryByte = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ntotalmemorybyte()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ntotalmemorybyte().data(), this->ntotalmemorybyte().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nTotalMemoryByte"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nNetworkInK = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nnetworkink()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nnetworkink().data(), this->nnetworkink().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nNetworkInK"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nNetworkOutK = 13;
      case 13: {
        if (tag == 106u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nnetworkoutk()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nnetworkoutk().data(), this->nnetworkoutk().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nNetworkOutK"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nTotalSpaceByte = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ntotalspacebyte()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ntotalspacebyte().data(), this->ntotalspacebyte().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nTotalSpaceByte"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nFreeSpaceByte = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nfreespacebyte()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nfreespacebyte().data(), this->nfreespacebyte().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetRunInfo.nFreeSpaceByte"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestGetRunInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestGetRunInfo)
  return false;
#undef DO_
}

void RestGetRunInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestGetRunInfo)
  // string strRunTime = 1;
  if (this->strruntime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strruntime().data(), this->strruntime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strRunTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strruntime(), output);
  }

  // string strCPU = 2;
  if (this->strcpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcpu().data(), this->strcpu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strCPU");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcpu(), output);
  }

  // string strMemory = 3;
  if (this->strmemory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmemory().data(), this->strmemory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strMemory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strmemory(), output);
  }

  // string strNetworkIn = 4;
  if (this->strnetworkin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strnetworkin().data(), this->strnetworkin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strNetworkIn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strnetworkin(), output);
  }

  // string strNetworkOut = 5;
  if (this->strnetworkout().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strnetworkout().data(), this->strnetworkout().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strNetworkOut");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strnetworkout(), output);
  }

  // string strTotalSpace = 6;
  if (this->strtotalspace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtotalspace().data(), this->strtotalspace().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strTotalSpace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strtotalspace(), output);
  }

  // string strFreeSpace = 7;
  if (this->strfreespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfreespace().data(), this->strfreespace().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strFreeSpace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->strfreespace(), output);
  }

  // string nRunTimeSec = 8;
  if (this->nruntimesec().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nruntimesec().data(), this->nruntimesec().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nRunTimeSec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nruntimesec(), output);
  }

  // string nCPUUsage = 9;
  if (this->ncpuusage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncpuusage().data(), this->ncpuusage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nCPUUsage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ncpuusage(), output);
  }

  // string nMemoryUsage = 10;
  if (this->nmemoryusage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nmemoryusage().data(), this->nmemoryusage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nMemoryUsage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->nmemoryusage(), output);
  }

  // string nTotalMemoryByte = 11;
  if (this->ntotalmemorybyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntotalmemorybyte().data(), this->ntotalmemorybyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nTotalMemoryByte");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->ntotalmemorybyte(), output);
  }

  // string nNetworkInK = 12;
  if (this->nnetworkink().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nnetworkink().data(), this->nnetworkink().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nNetworkInK");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->nnetworkink(), output);
  }

  // string nNetworkOutK = 13;
  if (this->nnetworkoutk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nnetworkoutk().data(), this->nnetworkoutk().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nNetworkOutK");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->nnetworkoutk(), output);
  }

  // string nTotalSpaceByte = 14;
  if (this->ntotalspacebyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntotalspacebyte().data(), this->ntotalspacebyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nTotalSpaceByte");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->ntotalspacebyte(), output);
  }

  // string nFreeSpaceByte = 15;
  if (this->nfreespacebyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nfreespacebyte().data(), this->nfreespacebyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nFreeSpaceByte");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->nfreespacebyte(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestGetRunInfo)
}

::google::protobuf::uint8* RestGetRunInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestGetRunInfo)
  // string strRunTime = 1;
  if (this->strruntime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strruntime().data(), this->strruntime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strRunTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strruntime(), target);
  }

  // string strCPU = 2;
  if (this->strcpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcpu().data(), this->strcpu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strCPU");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcpu(), target);
  }

  // string strMemory = 3;
  if (this->strmemory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strmemory().data(), this->strmemory().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strMemory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strmemory(), target);
  }

  // string strNetworkIn = 4;
  if (this->strnetworkin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strnetworkin().data(), this->strnetworkin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strNetworkIn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strnetworkin(), target);
  }

  // string strNetworkOut = 5;
  if (this->strnetworkout().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strnetworkout().data(), this->strnetworkout().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strNetworkOut");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strnetworkout(), target);
  }

  // string strTotalSpace = 6;
  if (this->strtotalspace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strtotalspace().data(), this->strtotalspace().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strTotalSpace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strtotalspace(), target);
  }

  // string strFreeSpace = 7;
  if (this->strfreespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strfreespace().data(), this->strfreespace().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.strFreeSpace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->strfreespace(), target);
  }

  // string nRunTimeSec = 8;
  if (this->nruntimesec().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nruntimesec().data(), this->nruntimesec().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nRunTimeSec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nruntimesec(), target);
  }

  // string nCPUUsage = 9;
  if (this->ncpuusage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ncpuusage().data(), this->ncpuusage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nCPUUsage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ncpuusage(), target);
  }

  // string nMemoryUsage = 10;
  if (this->nmemoryusage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nmemoryusage().data(), this->nmemoryusage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nMemoryUsage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->nmemoryusage(), target);
  }

  // string nTotalMemoryByte = 11;
  if (this->ntotalmemorybyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntotalmemorybyte().data(), this->ntotalmemorybyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nTotalMemoryByte");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->ntotalmemorybyte(), target);
  }

  // string nNetworkInK = 12;
  if (this->nnetworkink().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nnetworkink().data(), this->nnetworkink().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nNetworkInK");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->nnetworkink(), target);
  }

  // string nNetworkOutK = 13;
  if (this->nnetworkoutk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nnetworkoutk().data(), this->nnetworkoutk().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nNetworkOutK");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->nnetworkoutk(), target);
  }

  // string nTotalSpaceByte = 14;
  if (this->ntotalspacebyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ntotalspacebyte().data(), this->ntotalspacebyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nTotalSpaceByte");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->ntotalspacebyte(), target);
  }

  // string nFreeSpaceByte = 15;
  if (this->nfreespacebyte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nfreespacebyte().data(), this->nfreespacebyte().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetRunInfo.nFreeSpaceByte");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->nfreespacebyte(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestGetRunInfo)
  return target;
}

size_t RestGetRunInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestGetRunInfo)
  size_t total_size = 0;

  // string strRunTime = 1;
  if (this->strruntime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strruntime());
  }

  // string strCPU = 2;
  if (this->strcpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcpu());
  }

  // string strMemory = 3;
  if (this->strmemory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strmemory());
  }

  // string strNetworkIn = 4;
  if (this->strnetworkin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strnetworkin());
  }

  // string strNetworkOut = 5;
  if (this->strnetworkout().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strnetworkout());
  }

  // string strTotalSpace = 6;
  if (this->strtotalspace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strtotalspace());
  }

  // string strFreeSpace = 7;
  if (this->strfreespace().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strfreespace());
  }

  // string nRunTimeSec = 8;
  if (this->nruntimesec().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nruntimesec());
  }

  // string nCPUUsage = 9;
  if (this->ncpuusage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncpuusage());
  }

  // string nMemoryUsage = 10;
  if (this->nmemoryusage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nmemoryusage());
  }

  // string nTotalMemoryByte = 11;
  if (this->ntotalmemorybyte().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ntotalmemorybyte());
  }

  // string nNetworkInK = 12;
  if (this->nnetworkink().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nnetworkink());
  }

  // string nNetworkOutK = 13;
  if (this->nnetworkoutk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nnetworkoutk());
  }

  // string nTotalSpaceByte = 14;
  if (this->ntotalspacebyte().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ntotalspacebyte());
  }

  // string nFreeSpaceByte = 15;
  if (this->nfreespacebyte().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nfreespacebyte());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestGetRunInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestGetRunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RestGetRunInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestGetRunInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestGetRunInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestGetRunInfo)
    MergeFrom(*source);
  }
}

void RestGetRunInfo::MergeFrom(const RestGetRunInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestGetRunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strruntime().size() > 0) {

    strruntime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strruntime_);
  }
  if (from.strcpu().size() > 0) {

    strcpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcpu_);
  }
  if (from.strmemory().size() > 0) {

    strmemory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strmemory_);
  }
  if (from.strnetworkin().size() > 0) {

    strnetworkin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strnetworkin_);
  }
  if (from.strnetworkout().size() > 0) {

    strnetworkout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strnetworkout_);
  }
  if (from.strtotalspace().size() > 0) {

    strtotalspace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strtotalspace_);
  }
  if (from.strfreespace().size() > 0) {

    strfreespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strfreespace_);
  }
  if (from.nruntimesec().size() > 0) {

    nruntimesec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nruntimesec_);
  }
  if (from.ncpuusage().size() > 0) {

    ncpuusage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncpuusage_);
  }
  if (from.nmemoryusage().size() > 0) {

    nmemoryusage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nmemoryusage_);
  }
  if (from.ntotalmemorybyte().size() > 0) {

    ntotalmemorybyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntotalmemorybyte_);
  }
  if (from.nnetworkink().size() > 0) {

    nnetworkink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nnetworkink_);
  }
  if (from.nnetworkoutk().size() > 0) {

    nnetworkoutk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nnetworkoutk_);
  }
  if (from.ntotalspacebyte().size() > 0) {

    ntotalspacebyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ntotalspacebyte_);
  }
  if (from.nfreespacebyte().size() > 0) {

    nfreespacebyte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nfreespacebyte_);
  }
}

void RestGetRunInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestGetRunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestGetRunInfo::CopyFrom(const RestGetRunInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestGetRunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestGetRunInfo::IsInitialized() const {
  return true;
}

void RestGetRunInfo::Swap(RestGetRunInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestGetRunInfo::InternalSwap(RestGetRunInfo* other) {
  strruntime_.Swap(&other->strruntime_);
  strcpu_.Swap(&other->strcpu_);
  strmemory_.Swap(&other->strmemory_);
  strnetworkin_.Swap(&other->strnetworkin_);
  strnetworkout_.Swap(&other->strnetworkout_);
  strtotalspace_.Swap(&other->strtotalspace_);
  strfreespace_.Swap(&other->strfreespace_);
  nruntimesec_.Swap(&other->nruntimesec_);
  ncpuusage_.Swap(&other->ncpuusage_);
  nmemoryusage_.Swap(&other->nmemoryusage_);
  ntotalmemorybyte_.Swap(&other->ntotalmemorybyte_);
  nnetworkink_.Swap(&other->nnetworkink_);
  nnetworkoutk_.Swap(&other->nnetworkoutk_);
  ntotalspacebyte_.Swap(&other->ntotalspacebyte_);
  nfreespacebyte_.Swap(&other->nfreespacebyte_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestGetRunInfo::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestGetRunInfo

// string strRunTime = 1;
void RestGetRunInfo::clear_strruntime() {
  strruntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strruntime() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strRunTime)
  return strruntime_.GetNoArena();
}
void RestGetRunInfo::set_strruntime(const ::std::string& value) {
  
  strruntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strRunTime)
}
#if LANG_CXX11
void RestGetRunInfo::set_strruntime(::std::string&& value) {
  
  strruntime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strRunTime)
}
#endif
void RestGetRunInfo::set_strruntime(const char* value) {
  
  strruntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strRunTime)
}
void RestGetRunInfo::set_strruntime(const char* value, size_t size) {
  
  strruntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strRunTime)
}
::std::string* RestGetRunInfo::mutable_strruntime() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strRunTime)
  return strruntime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strruntime() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strRunTime)
  
  return strruntime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strruntime(::std::string* strruntime) {
  if (strruntime != NULL) {
    
  } else {
    
  }
  strruntime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strruntime);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strRunTime)
}

// string strCPU = 2;
void RestGetRunInfo::clear_strcpu() {
  strcpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strcpu() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strCPU)
  return strcpu_.GetNoArena();
}
void RestGetRunInfo::set_strcpu(const ::std::string& value) {
  
  strcpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strCPU)
}
#if LANG_CXX11
void RestGetRunInfo::set_strcpu(::std::string&& value) {
  
  strcpu_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strCPU)
}
#endif
void RestGetRunInfo::set_strcpu(const char* value) {
  
  strcpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strCPU)
}
void RestGetRunInfo::set_strcpu(const char* value, size_t size) {
  
  strcpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strCPU)
}
::std::string* RestGetRunInfo::mutable_strcpu() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strCPU)
  return strcpu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strcpu() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strCPU)
  
  return strcpu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strcpu(::std::string* strcpu) {
  if (strcpu != NULL) {
    
  } else {
    
  }
  strcpu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcpu);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strCPU)
}

// string strMemory = 3;
void RestGetRunInfo::clear_strmemory() {
  strmemory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strmemory() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strMemory)
  return strmemory_.GetNoArena();
}
void RestGetRunInfo::set_strmemory(const ::std::string& value) {
  
  strmemory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strMemory)
}
#if LANG_CXX11
void RestGetRunInfo::set_strmemory(::std::string&& value) {
  
  strmemory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strMemory)
}
#endif
void RestGetRunInfo::set_strmemory(const char* value) {
  
  strmemory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strMemory)
}
void RestGetRunInfo::set_strmemory(const char* value, size_t size) {
  
  strmemory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strMemory)
}
::std::string* RestGetRunInfo::mutable_strmemory() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strMemory)
  return strmemory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strmemory() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strMemory)
  
  return strmemory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strmemory(::std::string* strmemory) {
  if (strmemory != NULL) {
    
  } else {
    
  }
  strmemory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmemory);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strMemory)
}

// string strNetworkIn = 4;
void RestGetRunInfo::clear_strnetworkin() {
  strnetworkin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strnetworkin() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strNetworkIn)
  return strnetworkin_.GetNoArena();
}
void RestGetRunInfo::set_strnetworkin(const ::std::string& value) {
  
  strnetworkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strNetworkIn)
}
#if LANG_CXX11
void RestGetRunInfo::set_strnetworkin(::std::string&& value) {
  
  strnetworkin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strNetworkIn)
}
#endif
void RestGetRunInfo::set_strnetworkin(const char* value) {
  
  strnetworkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strNetworkIn)
}
void RestGetRunInfo::set_strnetworkin(const char* value, size_t size) {
  
  strnetworkin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strNetworkIn)
}
::std::string* RestGetRunInfo::mutable_strnetworkin() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strNetworkIn)
  return strnetworkin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strnetworkin() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strNetworkIn)
  
  return strnetworkin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strnetworkin(::std::string* strnetworkin) {
  if (strnetworkin != NULL) {
    
  } else {
    
  }
  strnetworkin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strnetworkin);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strNetworkIn)
}

// string strNetworkOut = 5;
void RestGetRunInfo::clear_strnetworkout() {
  strnetworkout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strnetworkout() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strNetworkOut)
  return strnetworkout_.GetNoArena();
}
void RestGetRunInfo::set_strnetworkout(const ::std::string& value) {
  
  strnetworkout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strNetworkOut)
}
#if LANG_CXX11
void RestGetRunInfo::set_strnetworkout(::std::string&& value) {
  
  strnetworkout_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strNetworkOut)
}
#endif
void RestGetRunInfo::set_strnetworkout(const char* value) {
  
  strnetworkout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strNetworkOut)
}
void RestGetRunInfo::set_strnetworkout(const char* value, size_t size) {
  
  strnetworkout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strNetworkOut)
}
::std::string* RestGetRunInfo::mutable_strnetworkout() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strNetworkOut)
  return strnetworkout_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strnetworkout() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strNetworkOut)
  
  return strnetworkout_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strnetworkout(::std::string* strnetworkout) {
  if (strnetworkout != NULL) {
    
  } else {
    
  }
  strnetworkout_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strnetworkout);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strNetworkOut)
}

// string strTotalSpace = 6;
void RestGetRunInfo::clear_strtotalspace() {
  strtotalspace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strtotalspace() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strTotalSpace)
  return strtotalspace_.GetNoArena();
}
void RestGetRunInfo::set_strtotalspace(const ::std::string& value) {
  
  strtotalspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strTotalSpace)
}
#if LANG_CXX11
void RestGetRunInfo::set_strtotalspace(::std::string&& value) {
  
  strtotalspace_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strTotalSpace)
}
#endif
void RestGetRunInfo::set_strtotalspace(const char* value) {
  
  strtotalspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strTotalSpace)
}
void RestGetRunInfo::set_strtotalspace(const char* value, size_t size) {
  
  strtotalspace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strTotalSpace)
}
::std::string* RestGetRunInfo::mutable_strtotalspace() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strTotalSpace)
  return strtotalspace_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strtotalspace() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strTotalSpace)
  
  return strtotalspace_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strtotalspace(::std::string* strtotalspace) {
  if (strtotalspace != NULL) {
    
  } else {
    
  }
  strtotalspace_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtotalspace);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strTotalSpace)
}

// string strFreeSpace = 7;
void RestGetRunInfo::clear_strfreespace() {
  strfreespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::strfreespace() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.strFreeSpace)
  return strfreespace_.GetNoArena();
}
void RestGetRunInfo::set_strfreespace(const ::std::string& value) {
  
  strfreespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.strFreeSpace)
}
#if LANG_CXX11
void RestGetRunInfo::set_strfreespace(::std::string&& value) {
  
  strfreespace_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.strFreeSpace)
}
#endif
void RestGetRunInfo::set_strfreespace(const char* value) {
  
  strfreespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.strFreeSpace)
}
void RestGetRunInfo::set_strfreespace(const char* value, size_t size) {
  
  strfreespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.strFreeSpace)
}
::std::string* RestGetRunInfo::mutable_strfreespace() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.strFreeSpace)
  return strfreespace_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_strfreespace() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.strFreeSpace)
  
  return strfreespace_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_strfreespace(::std::string* strfreespace) {
  if (strfreespace != NULL) {
    
  } else {
    
  }
  strfreespace_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strfreespace);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.strFreeSpace)
}

// string nRunTimeSec = 8;
void RestGetRunInfo::clear_nruntimesec() {
  nruntimesec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::nruntimesec() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nRunTimeSec)
  return nruntimesec_.GetNoArena();
}
void RestGetRunInfo::set_nruntimesec(const ::std::string& value) {
  
  nruntimesec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nRunTimeSec)
}
#if LANG_CXX11
void RestGetRunInfo::set_nruntimesec(::std::string&& value) {
  
  nruntimesec_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nRunTimeSec)
}
#endif
void RestGetRunInfo::set_nruntimesec(const char* value) {
  
  nruntimesec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nRunTimeSec)
}
void RestGetRunInfo::set_nruntimesec(const char* value, size_t size) {
  
  nruntimesec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nRunTimeSec)
}
::std::string* RestGetRunInfo::mutable_nruntimesec() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nRunTimeSec)
  return nruntimesec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_nruntimesec() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nRunTimeSec)
  
  return nruntimesec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_nruntimesec(::std::string* nruntimesec) {
  if (nruntimesec != NULL) {
    
  } else {
    
  }
  nruntimesec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nruntimesec);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nRunTimeSec)
}

// string nCPUUsage = 9;
void RestGetRunInfo::clear_ncpuusage() {
  ncpuusage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::ncpuusage() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nCPUUsage)
  return ncpuusage_.GetNoArena();
}
void RestGetRunInfo::set_ncpuusage(const ::std::string& value) {
  
  ncpuusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nCPUUsage)
}
#if LANG_CXX11
void RestGetRunInfo::set_ncpuusage(::std::string&& value) {
  
  ncpuusage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nCPUUsage)
}
#endif
void RestGetRunInfo::set_ncpuusage(const char* value) {
  
  ncpuusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nCPUUsage)
}
void RestGetRunInfo::set_ncpuusage(const char* value, size_t size) {
  
  ncpuusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nCPUUsage)
}
::std::string* RestGetRunInfo::mutable_ncpuusage() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nCPUUsage)
  return ncpuusage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_ncpuusage() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nCPUUsage)
  
  return ncpuusage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_ncpuusage(::std::string* ncpuusage) {
  if (ncpuusage != NULL) {
    
  } else {
    
  }
  ncpuusage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncpuusage);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nCPUUsage)
}

// string nMemoryUsage = 10;
void RestGetRunInfo::clear_nmemoryusage() {
  nmemoryusage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::nmemoryusage() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nMemoryUsage)
  return nmemoryusage_.GetNoArena();
}
void RestGetRunInfo::set_nmemoryusage(const ::std::string& value) {
  
  nmemoryusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nMemoryUsage)
}
#if LANG_CXX11
void RestGetRunInfo::set_nmemoryusage(::std::string&& value) {
  
  nmemoryusage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nMemoryUsage)
}
#endif
void RestGetRunInfo::set_nmemoryusage(const char* value) {
  
  nmemoryusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nMemoryUsage)
}
void RestGetRunInfo::set_nmemoryusage(const char* value, size_t size) {
  
  nmemoryusage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nMemoryUsage)
}
::std::string* RestGetRunInfo::mutable_nmemoryusage() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nMemoryUsage)
  return nmemoryusage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_nmemoryusage() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nMemoryUsage)
  
  return nmemoryusage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_nmemoryusage(::std::string* nmemoryusage) {
  if (nmemoryusage != NULL) {
    
  } else {
    
  }
  nmemoryusage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nmemoryusage);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nMemoryUsage)
}

// string nTotalMemoryByte = 11;
void RestGetRunInfo::clear_ntotalmemorybyte() {
  ntotalmemorybyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::ntotalmemorybyte() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nTotalMemoryByte)
  return ntotalmemorybyte_.GetNoArena();
}
void RestGetRunInfo::set_ntotalmemorybyte(const ::std::string& value) {
  
  ntotalmemorybyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nTotalMemoryByte)
}
#if LANG_CXX11
void RestGetRunInfo::set_ntotalmemorybyte(::std::string&& value) {
  
  ntotalmemorybyte_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nTotalMemoryByte)
}
#endif
void RestGetRunInfo::set_ntotalmemorybyte(const char* value) {
  
  ntotalmemorybyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nTotalMemoryByte)
}
void RestGetRunInfo::set_ntotalmemorybyte(const char* value, size_t size) {
  
  ntotalmemorybyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nTotalMemoryByte)
}
::std::string* RestGetRunInfo::mutable_ntotalmemorybyte() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nTotalMemoryByte)
  return ntotalmemorybyte_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_ntotalmemorybyte() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nTotalMemoryByte)
  
  return ntotalmemorybyte_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_ntotalmemorybyte(::std::string* ntotalmemorybyte) {
  if (ntotalmemorybyte != NULL) {
    
  } else {
    
  }
  ntotalmemorybyte_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ntotalmemorybyte);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nTotalMemoryByte)
}

// string nNetworkInK = 12;
void RestGetRunInfo::clear_nnetworkink() {
  nnetworkink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::nnetworkink() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nNetworkInK)
  return nnetworkink_.GetNoArena();
}
void RestGetRunInfo::set_nnetworkink(const ::std::string& value) {
  
  nnetworkink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nNetworkInK)
}
#if LANG_CXX11
void RestGetRunInfo::set_nnetworkink(::std::string&& value) {
  
  nnetworkink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nNetworkInK)
}
#endif
void RestGetRunInfo::set_nnetworkink(const char* value) {
  
  nnetworkink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nNetworkInK)
}
void RestGetRunInfo::set_nnetworkink(const char* value, size_t size) {
  
  nnetworkink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nNetworkInK)
}
::std::string* RestGetRunInfo::mutable_nnetworkink() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nNetworkInK)
  return nnetworkink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_nnetworkink() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nNetworkInK)
  
  return nnetworkink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_nnetworkink(::std::string* nnetworkink) {
  if (nnetworkink != NULL) {
    
  } else {
    
  }
  nnetworkink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nnetworkink);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nNetworkInK)
}

// string nNetworkOutK = 13;
void RestGetRunInfo::clear_nnetworkoutk() {
  nnetworkoutk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::nnetworkoutk() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nNetworkOutK)
  return nnetworkoutk_.GetNoArena();
}
void RestGetRunInfo::set_nnetworkoutk(const ::std::string& value) {
  
  nnetworkoutk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nNetworkOutK)
}
#if LANG_CXX11
void RestGetRunInfo::set_nnetworkoutk(::std::string&& value) {
  
  nnetworkoutk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nNetworkOutK)
}
#endif
void RestGetRunInfo::set_nnetworkoutk(const char* value) {
  
  nnetworkoutk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nNetworkOutK)
}
void RestGetRunInfo::set_nnetworkoutk(const char* value, size_t size) {
  
  nnetworkoutk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nNetworkOutK)
}
::std::string* RestGetRunInfo::mutable_nnetworkoutk() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nNetworkOutK)
  return nnetworkoutk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_nnetworkoutk() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nNetworkOutK)
  
  return nnetworkoutk_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_nnetworkoutk(::std::string* nnetworkoutk) {
  if (nnetworkoutk != NULL) {
    
  } else {
    
  }
  nnetworkoutk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nnetworkoutk);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nNetworkOutK)
}

// string nTotalSpaceByte = 14;
void RestGetRunInfo::clear_ntotalspacebyte() {
  ntotalspacebyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::ntotalspacebyte() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nTotalSpaceByte)
  return ntotalspacebyte_.GetNoArena();
}
void RestGetRunInfo::set_ntotalspacebyte(const ::std::string& value) {
  
  ntotalspacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nTotalSpaceByte)
}
#if LANG_CXX11
void RestGetRunInfo::set_ntotalspacebyte(::std::string&& value) {
  
  ntotalspacebyte_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nTotalSpaceByte)
}
#endif
void RestGetRunInfo::set_ntotalspacebyte(const char* value) {
  
  ntotalspacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nTotalSpaceByte)
}
void RestGetRunInfo::set_ntotalspacebyte(const char* value, size_t size) {
  
  ntotalspacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nTotalSpaceByte)
}
::std::string* RestGetRunInfo::mutable_ntotalspacebyte() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nTotalSpaceByte)
  return ntotalspacebyte_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_ntotalspacebyte() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nTotalSpaceByte)
  
  return ntotalspacebyte_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_ntotalspacebyte(::std::string* ntotalspacebyte) {
  if (ntotalspacebyte != NULL) {
    
  } else {
    
  }
  ntotalspacebyte_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ntotalspacebyte);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nTotalSpaceByte)
}

// string nFreeSpaceByte = 15;
void RestGetRunInfo::clear_nfreespacebyte() {
  nfreespacebyte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetRunInfo::nfreespacebyte() const {
  // @@protoc_insertion_point(field_get:RestGetRunInfo.nFreeSpaceByte)
  return nfreespacebyte_.GetNoArena();
}
void RestGetRunInfo::set_nfreespacebyte(const ::std::string& value) {
  
  nfreespacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetRunInfo.nFreeSpaceByte)
}
#if LANG_CXX11
void RestGetRunInfo::set_nfreespacebyte(::std::string&& value) {
  
  nfreespacebyte_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetRunInfo.nFreeSpaceByte)
}
#endif
void RestGetRunInfo::set_nfreespacebyte(const char* value) {
  
  nfreespacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetRunInfo.nFreeSpaceByte)
}
void RestGetRunInfo::set_nfreespacebyte(const char* value, size_t size) {
  
  nfreespacebyte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetRunInfo.nFreeSpaceByte)
}
::std::string* RestGetRunInfo::mutable_nfreespacebyte() {
  
  // @@protoc_insertion_point(field_mutable:RestGetRunInfo.nFreeSpaceByte)
  return nfreespacebyte_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetRunInfo::release_nfreespacebyte() {
  // @@protoc_insertion_point(field_release:RestGetRunInfo.nFreeSpaceByte)
  
  return nfreespacebyte_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetRunInfo::set_allocated_nfreespacebyte(::std::string* nfreespacebyte) {
  if (nfreespacebyte != NULL) {
    
  } else {
    
  }
  nfreespacebyte_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nfreespacebyte);
  // @@protoc_insertion_point(field_set_allocated:RestGetRunInfo.nFreeSpaceByte)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestGetSystemInfo::kStrVersionFieldNumber;
const int RestGetSystemInfo::kStrHostIdFieldNumber;
const int RestGetSystemInfo::kStrLicenseTypeFieldNumber;
const int RestGetSystemInfo::kStrLicenseFullFieldNumber;
const int RestGetSystemInfo::kStrChannelLimitFieldNumber;
const int RestGetSystemInfo::kStrEndtimeFieldNumber;
const int RestGetSystemInfo::kBDeviceSDKFieldNumber;
const int RestGetSystemInfo::kBDeviceSDKPbFieldNumber;
const int RestGetSystemInfo::kBGB28181FieldNumber;
const int RestGetSystemInfo::kBTranscodingFieldNumber;
const int RestGetSystemInfo::kBClusterFieldNumber;
const int RestGetSystemInfo::kBPlatformFieldNumber;
const int RestGetSystemInfo::kBVideoConferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestGetSystemInfo::RestGetSystemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestGetSystemInfo)
}
RestGetSystemInfo::RestGetSystemInfo(const RestGetSystemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strversion().size() > 0) {
    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  strhostid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strhostid().size() > 0) {
    strhostid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhostid_);
  }
  strlicensetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlicensetype().size() > 0) {
    strlicensetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensetype_);
  }
  strlicensefull_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strlicensefull().size() > 0) {
    strlicensefull_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensefull_);
  }
  strchannellimit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strchannellimit().size() > 0) {
    strchannellimit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannellimit_);
  }
  strendtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strendtime().size() > 0) {
    strendtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strendtime_);
  }
  ::memcpy(&bdevicesdk_, &from.bdevicesdk_,
    reinterpret_cast<char*>(&bvideoconference_) -
    reinterpret_cast<char*>(&bdevicesdk_) + sizeof(bvideoconference_));
  // @@protoc_insertion_point(copy_constructor:RestGetSystemInfo)
}

void RestGetSystemInfo::SharedCtor() {
  strversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhostid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensefull_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannellimit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strendtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bdevicesdk_, 0, reinterpret_cast<char*>(&bvideoconference_) -
    reinterpret_cast<char*>(&bdevicesdk_) + sizeof(bvideoconference_));
  _cached_size_ = 0;
}

RestGetSystemInfo::~RestGetSystemInfo() {
  // @@protoc_insertion_point(destructor:RestGetSystemInfo)
  SharedDtor();
}

void RestGetSystemInfo::SharedDtor() {
  strversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhostid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensefull_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannellimit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strendtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestGetSystemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestGetSystemInfo::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[3].descriptor;
}

const RestGetSystemInfo& RestGetSystemInfo::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestGetSystemInfo* RestGetSystemInfo::New(::google::protobuf::Arena* arena) const {
  RestGetSystemInfo* n = new RestGetSystemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestGetSystemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RestGetSystemInfo)
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strhostid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strlicensefull_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strchannellimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bdevicesdk_, 0, reinterpret_cast<char*>(&bvideoconference_) -
    reinterpret_cast<char*>(&bdevicesdk_) + sizeof(bvideoconference_));
}

bool RestGetSystemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestGetSystemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strVersion = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strversion().data(), this->strversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strHostId = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strhostid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strhostid().data(), this->strhostid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strHostId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLicenseType = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlicensetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlicensetype().data(), this->strlicensetype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strLicenseType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strLicenseFull = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strlicensefull()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strlicensefull().data(), this->strlicensefull().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strLicenseFull"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strChannelLimit = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strchannellimit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strchannellimit().data(), this->strchannellimit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strChannelLimit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strEndtime = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strendtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strendtime().data(), this->strendtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestGetSystemInfo.strEndtime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bDeviceSDK = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdevicesdk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bDeviceSDKPb = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdevicesdkpb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bGB28181 = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bgb28181_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bTranscoding = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &btranscoding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bCluster = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bcluster_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bPlatform = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bplatform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bVideoConference = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bvideoconference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestGetSystemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestGetSystemInfo)
  return false;
#undef DO_
}

void RestGetSystemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestGetSystemInfo)
  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strversion(), output);
  }

  // string strHostId = 2;
  if (this->strhostid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhostid().data(), this->strhostid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strHostId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strhostid(), output);
  }

  // string strLicenseType = 3;
  if (this->strlicensetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensetype().data(), this->strlicensetype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strLicenseType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strlicensetype(), output);
  }

  // string strLicenseFull = 4;
  if (this->strlicensefull().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensefull().data(), this->strlicensefull().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strLicenseFull");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strlicensefull(), output);
  }

  // string strChannelLimit = 5;
  if (this->strchannellimit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannellimit().data(), this->strchannellimit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strChannelLimit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strchannellimit(), output);
  }

  // string strEndtime = 6;
  if (this->strendtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strEndtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strendtime(), output);
  }

  // bool bDeviceSDK = 7;
  if (this->bdevicesdk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bdevicesdk(), output);
  }

  // bool bDeviceSDKPb = 8;
  if (this->bdevicesdkpb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->bdevicesdkpb(), output);
  }

  // bool bGB28181 = 9;
  if (this->bgb28181() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->bgb28181(), output);
  }

  // bool bTranscoding = 10;
  if (this->btranscoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->btranscoding(), output);
  }

  // bool bCluster = 11;
  if (this->bcluster() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->bcluster(), output);
  }

  // bool bPlatform = 12;
  if (this->bplatform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->bplatform(), output);
  }

  // bool bVideoConference = 13;
  if (this->bvideoconference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->bvideoconference(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestGetSystemInfo)
}

::google::protobuf::uint8* RestGetSystemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestGetSystemInfo)
  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strversion().data(), this->strversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strversion(), target);
  }

  // string strHostId = 2;
  if (this->strhostid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strhostid().data(), this->strhostid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strHostId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strhostid(), target);
  }

  // string strLicenseType = 3;
  if (this->strlicensetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensetype().data(), this->strlicensetype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strLicenseType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strlicensetype(), target);
  }

  // string strLicenseFull = 4;
  if (this->strlicensefull().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strlicensefull().data(), this->strlicensefull().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strLicenseFull");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strlicensefull(), target);
  }

  // string strChannelLimit = 5;
  if (this->strchannellimit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strchannellimit().data(), this->strchannellimit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strChannelLimit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strchannellimit(), target);
  }

  // string strEndtime = 6;
  if (this->strendtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strendtime().data(), this->strendtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestGetSystemInfo.strEndtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strendtime(), target);
  }

  // bool bDeviceSDK = 7;
  if (this->bdevicesdk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bdevicesdk(), target);
  }

  // bool bDeviceSDKPb = 8;
  if (this->bdevicesdkpb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->bdevicesdkpb(), target);
  }

  // bool bGB28181 = 9;
  if (this->bgb28181() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->bgb28181(), target);
  }

  // bool bTranscoding = 10;
  if (this->btranscoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->btranscoding(), target);
  }

  // bool bCluster = 11;
  if (this->bcluster() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->bcluster(), target);
  }

  // bool bPlatform = 12;
  if (this->bplatform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->bplatform(), target);
  }

  // bool bVideoConference = 13;
  if (this->bvideoconference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->bvideoconference(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestGetSystemInfo)
  return target;
}

size_t RestGetSystemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestGetSystemInfo)
  size_t total_size = 0;

  // string strVersion = 1;
  if (this->strversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strversion());
  }

  // string strHostId = 2;
  if (this->strhostid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strhostid());
  }

  // string strLicenseType = 3;
  if (this->strlicensetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlicensetype());
  }

  // string strLicenseFull = 4;
  if (this->strlicensefull().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strlicensefull());
  }

  // string strChannelLimit = 5;
  if (this->strchannellimit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strchannellimit());
  }

  // string strEndtime = 6;
  if (this->strendtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strendtime());
  }

  // bool bDeviceSDK = 7;
  if (this->bdevicesdk() != 0) {
    total_size += 1 + 1;
  }

  // bool bDeviceSDKPb = 8;
  if (this->bdevicesdkpb() != 0) {
    total_size += 1 + 1;
  }

  // bool bGB28181 = 9;
  if (this->bgb28181() != 0) {
    total_size += 1 + 1;
  }

  // bool bTranscoding = 10;
  if (this->btranscoding() != 0) {
    total_size += 1 + 1;
  }

  // bool bCluster = 11;
  if (this->bcluster() != 0) {
    total_size += 1 + 1;
  }

  // bool bPlatform = 12;
  if (this->bplatform() != 0) {
    total_size += 1 + 1;
  }

  // bool bVideoConference = 13;
  if (this->bvideoconference() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestGetSystemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestGetSystemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RestGetSystemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestGetSystemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestGetSystemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestGetSystemInfo)
    MergeFrom(*source);
  }
}

void RestGetSystemInfo::MergeFrom(const RestGetSystemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestGetSystemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strversion().size() > 0) {

    strversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strversion_);
  }
  if (from.strhostid().size() > 0) {

    strhostid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strhostid_);
  }
  if (from.strlicensetype().size() > 0) {

    strlicensetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensetype_);
  }
  if (from.strlicensefull().size() > 0) {

    strlicensefull_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strlicensefull_);
  }
  if (from.strchannellimit().size() > 0) {

    strchannellimit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strchannellimit_);
  }
  if (from.strendtime().size() > 0) {

    strendtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strendtime_);
  }
  if (from.bdevicesdk() != 0) {
    set_bdevicesdk(from.bdevicesdk());
  }
  if (from.bdevicesdkpb() != 0) {
    set_bdevicesdkpb(from.bdevicesdkpb());
  }
  if (from.bgb28181() != 0) {
    set_bgb28181(from.bgb28181());
  }
  if (from.btranscoding() != 0) {
    set_btranscoding(from.btranscoding());
  }
  if (from.bcluster() != 0) {
    set_bcluster(from.bcluster());
  }
  if (from.bplatform() != 0) {
    set_bplatform(from.bplatform());
  }
  if (from.bvideoconference() != 0) {
    set_bvideoconference(from.bvideoconference());
  }
}

void RestGetSystemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestGetSystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestGetSystemInfo::CopyFrom(const RestGetSystemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestGetSystemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestGetSystemInfo::IsInitialized() const {
  return true;
}

void RestGetSystemInfo::Swap(RestGetSystemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestGetSystemInfo::InternalSwap(RestGetSystemInfo* other) {
  strversion_.Swap(&other->strversion_);
  strhostid_.Swap(&other->strhostid_);
  strlicensetype_.Swap(&other->strlicensetype_);
  strlicensefull_.Swap(&other->strlicensefull_);
  strchannellimit_.Swap(&other->strchannellimit_);
  strendtime_.Swap(&other->strendtime_);
  std::swap(bdevicesdk_, other->bdevicesdk_);
  std::swap(bdevicesdkpb_, other->bdevicesdkpb_);
  std::swap(bgb28181_, other->bgb28181_);
  std::swap(btranscoding_, other->btranscoding_);
  std::swap(bcluster_, other->bcluster_);
  std::swap(bplatform_, other->bplatform_);
  std::swap(bvideoconference_, other->bvideoconference_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestGetSystemInfo::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestGetSystemInfo

// string strVersion = 1;
void RestGetSystemInfo::clear_strversion() {
  strversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strversion() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strVersion)
  return strversion_.GetNoArena();
}
void RestGetSystemInfo::set_strversion(const ::std::string& value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strVersion)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strversion(::std::string&& value) {
  
  strversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strVersion)
}
#endif
void RestGetSystemInfo::set_strversion(const char* value) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strVersion)
}
void RestGetSystemInfo::set_strversion(const char* value, size_t size) {
  
  strversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strVersion)
}
::std::string* RestGetSystemInfo::mutable_strversion() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strVersion)
  return strversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strversion() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strVersion)
  
  return strversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strversion(::std::string* strversion) {
  if (strversion != NULL) {
    
  } else {
    
  }
  strversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strversion);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strVersion)
}

// string strHostId = 2;
void RestGetSystemInfo::clear_strhostid() {
  strhostid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strhostid() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strHostId)
  return strhostid_.GetNoArena();
}
void RestGetSystemInfo::set_strhostid(const ::std::string& value) {
  
  strhostid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strHostId)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strhostid(::std::string&& value) {
  
  strhostid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strHostId)
}
#endif
void RestGetSystemInfo::set_strhostid(const char* value) {
  
  strhostid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strHostId)
}
void RestGetSystemInfo::set_strhostid(const char* value, size_t size) {
  
  strhostid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strHostId)
}
::std::string* RestGetSystemInfo::mutable_strhostid() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strHostId)
  return strhostid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strhostid() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strHostId)
  
  return strhostid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strhostid(::std::string* strhostid) {
  if (strhostid != NULL) {
    
  } else {
    
  }
  strhostid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strhostid);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strHostId)
}

// string strLicenseType = 3;
void RestGetSystemInfo::clear_strlicensetype() {
  strlicensetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strlicensetype() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strLicenseType)
  return strlicensetype_.GetNoArena();
}
void RestGetSystemInfo::set_strlicensetype(const ::std::string& value) {
  
  strlicensetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strLicenseType)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strlicensetype(::std::string&& value) {
  
  strlicensetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strLicenseType)
}
#endif
void RestGetSystemInfo::set_strlicensetype(const char* value) {
  
  strlicensetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strLicenseType)
}
void RestGetSystemInfo::set_strlicensetype(const char* value, size_t size) {
  
  strlicensetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strLicenseType)
}
::std::string* RestGetSystemInfo::mutable_strlicensetype() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strLicenseType)
  return strlicensetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strlicensetype() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strLicenseType)
  
  return strlicensetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strlicensetype(::std::string* strlicensetype) {
  if (strlicensetype != NULL) {
    
  } else {
    
  }
  strlicensetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlicensetype);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strLicenseType)
}

// string strLicenseFull = 4;
void RestGetSystemInfo::clear_strlicensefull() {
  strlicensefull_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strlicensefull() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strLicenseFull)
  return strlicensefull_.GetNoArena();
}
void RestGetSystemInfo::set_strlicensefull(const ::std::string& value) {
  
  strlicensefull_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strLicenseFull)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strlicensefull(::std::string&& value) {
  
  strlicensefull_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strLicenseFull)
}
#endif
void RestGetSystemInfo::set_strlicensefull(const char* value) {
  
  strlicensefull_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strLicenseFull)
}
void RestGetSystemInfo::set_strlicensefull(const char* value, size_t size) {
  
  strlicensefull_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strLicenseFull)
}
::std::string* RestGetSystemInfo::mutable_strlicensefull() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strLicenseFull)
  return strlicensefull_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strlicensefull() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strLicenseFull)
  
  return strlicensefull_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strlicensefull(::std::string* strlicensefull) {
  if (strlicensefull != NULL) {
    
  } else {
    
  }
  strlicensefull_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strlicensefull);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strLicenseFull)
}

// string strChannelLimit = 5;
void RestGetSystemInfo::clear_strchannellimit() {
  strchannellimit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strchannellimit() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strChannelLimit)
  return strchannellimit_.GetNoArena();
}
void RestGetSystemInfo::set_strchannellimit(const ::std::string& value) {
  
  strchannellimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strChannelLimit)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strchannellimit(::std::string&& value) {
  
  strchannellimit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strChannelLimit)
}
#endif
void RestGetSystemInfo::set_strchannellimit(const char* value) {
  
  strchannellimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strChannelLimit)
}
void RestGetSystemInfo::set_strchannellimit(const char* value, size_t size) {
  
  strchannellimit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strChannelLimit)
}
::std::string* RestGetSystemInfo::mutable_strchannellimit() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strChannelLimit)
  return strchannellimit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strchannellimit() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strChannelLimit)
  
  return strchannellimit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strchannellimit(::std::string* strchannellimit) {
  if (strchannellimit != NULL) {
    
  } else {
    
  }
  strchannellimit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strchannellimit);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strChannelLimit)
}

// string strEndtime = 6;
void RestGetSystemInfo::clear_strendtime() {
  strendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestGetSystemInfo::strendtime() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.strEndtime)
  return strendtime_.GetNoArena();
}
void RestGetSystemInfo::set_strendtime(const ::std::string& value) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.strEndtime)
}
#if LANG_CXX11
void RestGetSystemInfo::set_strendtime(::std::string&& value) {
  
  strendtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestGetSystemInfo.strEndtime)
}
#endif
void RestGetSystemInfo::set_strendtime(const char* value) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestGetSystemInfo.strEndtime)
}
void RestGetSystemInfo::set_strendtime(const char* value, size_t size) {
  
  strendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestGetSystemInfo.strEndtime)
}
::std::string* RestGetSystemInfo::mutable_strendtime() {
  
  // @@protoc_insertion_point(field_mutable:RestGetSystemInfo.strEndtime)
  return strendtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestGetSystemInfo::release_strendtime() {
  // @@protoc_insertion_point(field_release:RestGetSystemInfo.strEndtime)
  
  return strendtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestGetSystemInfo::set_allocated_strendtime(::std::string* strendtime) {
  if (strendtime != NULL) {
    
  } else {
    
  }
  strendtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strendtime);
  // @@protoc_insertion_point(field_set_allocated:RestGetSystemInfo.strEndtime)
}

// bool bDeviceSDK = 7;
void RestGetSystemInfo::clear_bdevicesdk() {
  bdevicesdk_ = false;
}
bool RestGetSystemInfo::bdevicesdk() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bDeviceSDK)
  return bdevicesdk_;
}
void RestGetSystemInfo::set_bdevicesdk(bool value) {
  
  bdevicesdk_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bDeviceSDK)
}

// bool bDeviceSDKPb = 8;
void RestGetSystemInfo::clear_bdevicesdkpb() {
  bdevicesdkpb_ = false;
}
bool RestGetSystemInfo::bdevicesdkpb() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bDeviceSDKPb)
  return bdevicesdkpb_;
}
void RestGetSystemInfo::set_bdevicesdkpb(bool value) {
  
  bdevicesdkpb_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bDeviceSDKPb)
}

// bool bGB28181 = 9;
void RestGetSystemInfo::clear_bgb28181() {
  bgb28181_ = false;
}
bool RestGetSystemInfo::bgb28181() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bGB28181)
  return bgb28181_;
}
void RestGetSystemInfo::set_bgb28181(bool value) {
  
  bgb28181_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bGB28181)
}

// bool bTranscoding = 10;
void RestGetSystemInfo::clear_btranscoding() {
  btranscoding_ = false;
}
bool RestGetSystemInfo::btranscoding() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bTranscoding)
  return btranscoding_;
}
void RestGetSystemInfo::set_btranscoding(bool value) {
  
  btranscoding_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bTranscoding)
}

// bool bCluster = 11;
void RestGetSystemInfo::clear_bcluster() {
  bcluster_ = false;
}
bool RestGetSystemInfo::bcluster() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bCluster)
  return bcluster_;
}
void RestGetSystemInfo::set_bcluster(bool value) {
  
  bcluster_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bCluster)
}

// bool bPlatform = 12;
void RestGetSystemInfo::clear_bplatform() {
  bplatform_ = false;
}
bool RestGetSystemInfo::bplatform() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bPlatform)
  return bplatform_;
}
void RestGetSystemInfo::set_bplatform(bool value) {
  
  bplatform_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bPlatform)
}

// bool bVideoConference = 13;
void RestGetSystemInfo::clear_bvideoconference() {
  bvideoconference_ = false;
}
bool RestGetSystemInfo::bvideoconference() const {
  // @@protoc_insertion_point(field_get:RestGetSystemInfo.bVideoConference)
  return bvideoconference_;
}
void RestGetSystemInfo::set_bvideoconference(bool value) {
  
  bvideoconference_ = value;
  // @@protoc_insertion_point(field_set:RestGetSystemInfo.bVideoConference)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Volumes::kStrDeviceFieldNumber;
const int Volumes::kStrPathFieldNumber;
const int Volumes::kBTotalFieldNumber;
const int Volumes::kBFreeFieldNumber;
const int Volumes::kBReadOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Volumes::Volumes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Volumes)
}
Volumes::Volumes(const Volumes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strdevice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strdevice().size() > 0) {
    strdevice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevice_);
  }
  strpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strpath().size() > 0) {
    strpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpath_);
  }
  btotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btotal().size() > 0) {
    btotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btotal_);
  }
  bfree_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bfree().size() > 0) {
    bfree_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bfree_);
  }
  breadonly_ = from.breadonly_;
  // @@protoc_insertion_point(copy_constructor:Volumes)
}

void Volumes::SharedCtor() {
  strdevice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  btotal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bfree_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breadonly_ = false;
  _cached_size_ = 0;
}

Volumes::~Volumes() {
  // @@protoc_insertion_point(destructor:Volumes)
  SharedDtor();
}

void Volumes::SharedDtor() {
  strdevice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  btotal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bfree_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Volumes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Volumes::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[4].descriptor;
}

const Volumes& Volumes::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

Volumes* Volumes::New(::google::protobuf::Arena* arena) const {
  Volumes* n = new Volumes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Volumes::Clear() {
// @@protoc_insertion_point(message_clear_start:Volumes)
  strdevice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  btotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bfree_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  breadonly_ = false;
}

bool Volumes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Volumes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strDevice = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdevice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strdevice().data(), this->strdevice().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Volumes.strDevice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strPath = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strpath().data(), this->strpath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Volumes.strPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bTotal = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btotal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btotal().data(), this->btotal().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Volumes.bTotal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bFree = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bfree()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bfree().data(), this->bfree().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Volumes.bFree"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bReadOnly = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &breadonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Volumes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Volumes)
  return false;
#undef DO_
}

void Volumes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Volumes)
  // string strDevice = 1;
  if (this->strdevice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevice().data(), this->strdevice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.strDevice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strdevice(), output);
  }

  // string strPath = 2;
  if (this->strpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.strPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strpath(), output);
  }

  // string bTotal = 3;
  if (this->btotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btotal().data(), this->btotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.bTotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->btotal(), output);
  }

  // string bFree = 4;
  if (this->bfree().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bfree().data(), this->bfree().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.bFree");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bfree(), output);
  }

  // bool bReadOnly = 5;
  if (this->breadonly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->breadonly(), output);
  }

  // @@protoc_insertion_point(serialize_end:Volumes)
}

::google::protobuf::uint8* Volumes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Volumes)
  // string strDevice = 1;
  if (this->strdevice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strdevice().data(), this->strdevice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.strDevice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strdevice(), target);
  }

  // string strPath = 2;
  if (this->strpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strpath().data(), this->strpath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.strPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strpath(), target);
  }

  // string bTotal = 3;
  if (this->btotal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btotal().data(), this->btotal().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.bTotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->btotal(), target);
  }

  // string bFree = 4;
  if (this->bfree().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bfree().data(), this->bfree().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Volumes.bFree");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bfree(), target);
  }

  // bool bReadOnly = 5;
  if (this->breadonly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->breadonly(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Volumes)
  return target;
}

size_t Volumes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Volumes)
  size_t total_size = 0;

  // string strDevice = 1;
  if (this->strdevice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strdevice());
  }

  // string strPath = 2;
  if (this->strpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strpath());
  }

  // string bTotal = 3;
  if (this->btotal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btotal());
  }

  // string bFree = 4;
  if (this->bfree().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bfree());
  }

  // bool bReadOnly = 5;
  if (this->breadonly() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Volumes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Volumes)
  GOOGLE_DCHECK_NE(&from, this);
  const Volumes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Volumes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Volumes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Volumes)
    MergeFrom(*source);
  }
}

void Volumes::MergeFrom(const Volumes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Volumes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strdevice().size() > 0) {

    strdevice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strdevice_);
  }
  if (from.strpath().size() > 0) {

    strpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strpath_);
  }
  if (from.btotal().size() > 0) {

    btotal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btotal_);
  }
  if (from.bfree().size() > 0) {

    bfree_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bfree_);
  }
  if (from.breadonly() != 0) {
    set_breadonly(from.breadonly());
  }
}

void Volumes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Volumes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Volumes::CopyFrom(const Volumes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Volumes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Volumes::IsInitialized() const {
  return true;
}

void Volumes::Swap(Volumes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Volumes::InternalSwap(Volumes* other) {
  strdevice_.Swap(&other->strdevice_);
  strpath_.Swap(&other->strpath_);
  btotal_.Swap(&other->btotal_);
  bfree_.Swap(&other->bfree_);
  std::swap(breadonly_, other->breadonly_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Volumes::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Volumes

// string strDevice = 1;
void Volumes::clear_strdevice() {
  strdevice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volumes::strdevice() const {
  // @@protoc_insertion_point(field_get:Volumes.strDevice)
  return strdevice_.GetNoArena();
}
void Volumes::set_strdevice(const ::std::string& value) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Volumes.strDevice)
}
#if LANG_CXX11
void Volumes::set_strdevice(::std::string&& value) {
  
  strdevice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Volumes.strDevice)
}
#endif
void Volumes::set_strdevice(const char* value) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Volumes.strDevice)
}
void Volumes::set_strdevice(const char* value, size_t size) {
  
  strdevice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Volumes.strDevice)
}
::std::string* Volumes::mutable_strdevice() {
  
  // @@protoc_insertion_point(field_mutable:Volumes.strDevice)
  return strdevice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volumes::release_strdevice() {
  // @@protoc_insertion_point(field_release:Volumes.strDevice)
  
  return strdevice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volumes::set_allocated_strdevice(::std::string* strdevice) {
  if (strdevice != NULL) {
    
  } else {
    
  }
  strdevice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strdevice);
  // @@protoc_insertion_point(field_set_allocated:Volumes.strDevice)
}

// string strPath = 2;
void Volumes::clear_strpath() {
  strpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volumes::strpath() const {
  // @@protoc_insertion_point(field_get:Volumes.strPath)
  return strpath_.GetNoArena();
}
void Volumes::set_strpath(const ::std::string& value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Volumes.strPath)
}
#if LANG_CXX11
void Volumes::set_strpath(::std::string&& value) {
  
  strpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Volumes.strPath)
}
#endif
void Volumes::set_strpath(const char* value) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Volumes.strPath)
}
void Volumes::set_strpath(const char* value, size_t size) {
  
  strpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Volumes.strPath)
}
::std::string* Volumes::mutable_strpath() {
  
  // @@protoc_insertion_point(field_mutable:Volumes.strPath)
  return strpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volumes::release_strpath() {
  // @@protoc_insertion_point(field_release:Volumes.strPath)
  
  return strpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volumes::set_allocated_strpath(::std::string* strpath) {
  if (strpath != NULL) {
    
  } else {
    
  }
  strpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strpath);
  // @@protoc_insertion_point(field_set_allocated:Volumes.strPath)
}

// string bTotal = 3;
void Volumes::clear_btotal() {
  btotal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volumes::btotal() const {
  // @@protoc_insertion_point(field_get:Volumes.bTotal)
  return btotal_.GetNoArena();
}
void Volumes::set_btotal(const ::std::string& value) {
  
  btotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Volumes.bTotal)
}
#if LANG_CXX11
void Volumes::set_btotal(::std::string&& value) {
  
  btotal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Volumes.bTotal)
}
#endif
void Volumes::set_btotal(const char* value) {
  
  btotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Volumes.bTotal)
}
void Volumes::set_btotal(const char* value, size_t size) {
  
  btotal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Volumes.bTotal)
}
::std::string* Volumes::mutable_btotal() {
  
  // @@protoc_insertion_point(field_mutable:Volumes.bTotal)
  return btotal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volumes::release_btotal() {
  // @@protoc_insertion_point(field_release:Volumes.bTotal)
  
  return btotal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volumes::set_allocated_btotal(::std::string* btotal) {
  if (btotal != NULL) {
    
  } else {
    
  }
  btotal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btotal);
  // @@protoc_insertion_point(field_set_allocated:Volumes.bTotal)
}

// string bFree = 4;
void Volumes::clear_bfree() {
  bfree_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Volumes::bfree() const {
  // @@protoc_insertion_point(field_get:Volumes.bFree)
  return bfree_.GetNoArena();
}
void Volumes::set_bfree(const ::std::string& value) {
  
  bfree_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Volumes.bFree)
}
#if LANG_CXX11
void Volumes::set_bfree(::std::string&& value) {
  
  bfree_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Volumes.bFree)
}
#endif
void Volumes::set_bfree(const char* value) {
  
  bfree_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Volumes.bFree)
}
void Volumes::set_bfree(const char* value, size_t size) {
  
  bfree_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Volumes.bFree)
}
::std::string* Volumes::mutable_bfree() {
  
  // @@protoc_insertion_point(field_mutable:Volumes.bFree)
  return bfree_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Volumes::release_bfree() {
  // @@protoc_insertion_point(field_release:Volumes.bFree)
  
  return bfree_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Volumes::set_allocated_bfree(::std::string* bfree) {
  if (bfree != NULL) {
    
  } else {
    
  }
  bfree_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bfree);
  // @@protoc_insertion_point(field_set_allocated:Volumes.bFree)
}

// bool bReadOnly = 5;
void Volumes::clear_breadonly() {
  breadonly_ = false;
}
bool Volumes::breadonly() const {
  // @@protoc_insertion_point(field_get:Volumes.bReadOnly)
  return breadonly_;
}
void Volumes::set_breadonly(bool value) {
  
  breadonly_ = value;
  // @@protoc_insertion_point(field_set:Volumes.bReadOnly)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestGetVolumes::kVolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestGetVolumes::RestGetVolumes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestGetVolumes)
}
RestGetVolumes::RestGetVolumes(const RestGetVolumes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vol_(from.vol_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RestGetVolumes)
}

void RestGetVolumes::SharedCtor() {
  _cached_size_ = 0;
}

RestGetVolumes::~RestGetVolumes() {
  // @@protoc_insertion_point(destructor:RestGetVolumes)
  SharedDtor();
}

void RestGetVolumes::SharedDtor() {
}

void RestGetVolumes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestGetVolumes::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[5].descriptor;
}

const RestGetVolumes& RestGetVolumes::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestGetVolumes* RestGetVolumes::New(::google::protobuf::Arena* arena) const {
  RestGetVolumes* n = new RestGetVolumes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestGetVolumes::Clear() {
// @@protoc_insertion_point(message_clear_start:RestGetVolumes)
  vol_.Clear();
}

bool RestGetVolumes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestGetVolumes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Volumes vol = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vol()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestGetVolumes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestGetVolumes)
  return false;
#undef DO_
}

void RestGetVolumes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestGetVolumes)
  // repeated .Volumes vol = 1;
  for (unsigned int i = 0, n = this->vol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vol(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RestGetVolumes)
}

::google::protobuf::uint8* RestGetVolumes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestGetVolumes)
  // repeated .Volumes vol = 1;
  for (unsigned int i = 0, n = this->vol_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->vol(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestGetVolumes)
  return target;
}

size_t RestGetVolumes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestGetVolumes)
  size_t total_size = 0;

  // repeated .Volumes vol = 1;
  {
    unsigned int count = this->vol_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vol(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestGetVolumes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestGetVolumes)
  GOOGLE_DCHECK_NE(&from, this);
  const RestGetVolumes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestGetVolumes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestGetVolumes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestGetVolumes)
    MergeFrom(*source);
  }
}

void RestGetVolumes::MergeFrom(const RestGetVolumes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestGetVolumes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vol_.MergeFrom(from.vol_);
}

void RestGetVolumes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestGetVolumes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestGetVolumes::CopyFrom(const RestGetVolumes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestGetVolumes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestGetVolumes::IsInitialized() const {
  return true;
}

void RestGetVolumes::Swap(RestGetVolumes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestGetVolumes::InternalSwap(RestGetVolumes* other) {
  vol_.UnsafeArenaSwap(&other->vol_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestGetVolumes::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestGetVolumes

// repeated .Volumes vol = 1;
int RestGetVolumes::vol_size() const {
  return vol_.size();
}
void RestGetVolumes::clear_vol() {
  vol_.Clear();
}
const ::Volumes& RestGetVolumes::vol(int index) const {
  // @@protoc_insertion_point(field_get:RestGetVolumes.vol)
  return vol_.Get(index);
}
::Volumes* RestGetVolumes::mutable_vol(int index) {
  // @@protoc_insertion_point(field_mutable:RestGetVolumes.vol)
  return vol_.Mutable(index);
}
::Volumes* RestGetVolumes::add_vol() {
  // @@protoc_insertion_point(field_add:RestGetVolumes.vol)
  return vol_.Add();
}
::google::protobuf::RepeatedPtrField< ::Volumes >*
RestGetVolumes::mutable_vol() {
  // @@protoc_insertion_point(field_mutable_list:RestGetVolumes.vol)
  return &vol_;
}
const ::google::protobuf::RepeatedPtrField< ::Volumes >&
RestGetVolumes::vol() const {
  // @@protoc_insertion_point(field_list:RestGetVolumes.vol)
  return vol_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestKeepalive::kBStatusFieldNumber;
const int RestKeepalive::kStrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestKeepalive::RestKeepalive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestKeepalive)
}
RestKeepalive::RestKeepalive(const RestKeepalive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcode().size() > 0) {
    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  bstatus_ = from.bstatus_;
  // @@protoc_insertion_point(copy_constructor:RestKeepalive)
}

void RestKeepalive::SharedCtor() {
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
  _cached_size_ = 0;
}

RestKeepalive::~RestKeepalive() {
  // @@protoc_insertion_point(destructor:RestKeepalive)
  SharedDtor();
}

void RestKeepalive::SharedDtor() {
  strcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestKeepalive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestKeepalive::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[6].descriptor;
}

const RestKeepalive& RestKeepalive::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestKeepalive* RestKeepalive::New(::google::protobuf::Arena* arena) const {
  RestKeepalive* n = new RestKeepalive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestKeepalive::Clear() {
// @@protoc_insertion_point(message_clear_start:RestKeepalive)
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
}

bool RestKeepalive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestKeepalive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bStatus = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCode = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcode().data(), this->strcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestKeepalive.strCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestKeepalive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestKeepalive)
  return false;
#undef DO_
}

void RestKeepalive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestKeepalive)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bstatus(), output);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestKeepalive.strCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestKeepalive)
}

::google::protobuf::uint8* RestKeepalive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestKeepalive)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bstatus(), target);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestKeepalive.strCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestKeepalive)
  return target;
}

size_t RestKeepalive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestKeepalive)
  size_t total_size = 0;

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcode());
  }

  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestKeepalive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestKeepalive)
  GOOGLE_DCHECK_NE(&from, this);
  const RestKeepalive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestKeepalive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestKeepalive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestKeepalive)
    MergeFrom(*source);
  }
}

void RestKeepalive::MergeFrom(const RestKeepalive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestKeepalive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcode().size() > 0) {

    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  if (from.bstatus() != 0) {
    set_bstatus(from.bstatus());
  }
}

void RestKeepalive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestKeepalive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestKeepalive::CopyFrom(const RestKeepalive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestKeepalive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestKeepalive::IsInitialized() const {
  return true;
}

void RestKeepalive::Swap(RestKeepalive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestKeepalive::InternalSwap(RestKeepalive* other) {
  strcode_.Swap(&other->strcode_);
  std::swap(bstatus_, other->bstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestKeepalive::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestKeepalive

// bool bStatus = 1;
void RestKeepalive::clear_bstatus() {
  bstatus_ = false;
}
bool RestKeepalive::bstatus() const {
  // @@protoc_insertion_point(field_get:RestKeepalive.bStatus)
  return bstatus_;
}
void RestKeepalive::set_bstatus(bool value) {
  
  bstatus_ = value;
  // @@protoc_insertion_point(field_set:RestKeepalive.bStatus)
}

// string strCode = 2;
void RestKeepalive::clear_strcode() {
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestKeepalive::strcode() const {
  // @@protoc_insertion_point(field_get:RestKeepalive.strCode)
  return strcode_.GetNoArena();
}
void RestKeepalive::set_strcode(const ::std::string& value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestKeepalive.strCode)
}
#if LANG_CXX11
void RestKeepalive::set_strcode(::std::string&& value) {
  
  strcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestKeepalive.strCode)
}
#endif
void RestKeepalive::set_strcode(const char* value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestKeepalive.strCode)
}
void RestKeepalive::set_strcode(const char* value, size_t size) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestKeepalive.strCode)
}
::std::string* RestKeepalive::mutable_strcode() {
  
  // @@protoc_insertion_point(field_mutable:RestKeepalive.strCode)
  return strcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestKeepalive::release_strcode() {
  // @@protoc_insertion_point(field_release:RestKeepalive.strCode)
  
  return strcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestKeepalive::set_allocated_strcode(::std::string* strcode) {
  if (strcode != NULL) {
    
  } else {
    
  }
  strcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcode);
  // @@protoc_insertion_point(field_set_allocated:RestKeepalive.strCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestLogin::kBStatusFieldNumber;
const int RestLogin::kStrSessionFieldNumber;
const int RestLogin::kNTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestLogin::RestLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestLogin)
}
RestLogin::RestLogin(const RestLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strsession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strsession().size() > 0) {
    strsession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsession_);
  }
  ::memcpy(&bstatus_, &from.bstatus_,
    reinterpret_cast<char*>(&ntimeout_) -
    reinterpret_cast<char*>(&bstatus_) + sizeof(ntimeout_));
  // @@protoc_insertion_point(copy_constructor:RestLogin)
}

void RestLogin::SharedCtor() {
  strsession_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bstatus_, 0, reinterpret_cast<char*>(&ntimeout_) -
    reinterpret_cast<char*>(&bstatus_) + sizeof(ntimeout_));
  _cached_size_ = 0;
}

RestLogin::~RestLogin() {
  // @@protoc_insertion_point(destructor:RestLogin)
  SharedDtor();
}

void RestLogin::SharedDtor() {
  strsession_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestLogin::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[7].descriptor;
}

const RestLogin& RestLogin::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestLogin* RestLogin::New(::google::protobuf::Arena* arena) const {
  RestLogin* n = new RestLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:RestLogin)
  strsession_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bstatus_, 0, reinterpret_cast<char*>(&ntimeout_) -
    reinterpret_cast<char*>(&bstatus_) + sizeof(ntimeout_));
}

bool RestLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bStatus = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strSession = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsession()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strsession().data(), this->strsession().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestLogin.strSession"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nTimeout = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntimeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestLogin)
  return false;
#undef DO_
}

void RestLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestLogin)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bstatus(), output);
  }

  // string strSession = 2;
  if (this->strsession().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsession().data(), this->strsession().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestLogin.strSession");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strsession(), output);
  }

  // int32 nTimeout = 3;
  if (this->ntimeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ntimeout(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestLogin)
}

::google::protobuf::uint8* RestLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestLogin)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bstatus(), target);
  }

  // string strSession = 2;
  if (this->strsession().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strsession().data(), this->strsession().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestLogin.strSession");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strsession(), target);
  }

  // int32 nTimeout = 3;
  if (this->ntimeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ntimeout(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestLogin)
  return target;
}

size_t RestLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestLogin)
  size_t total_size = 0;

  // string strSession = 2;
  if (this->strsession().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strsession());
  }

  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    total_size += 1 + 1;
  }

  // int32 nTimeout = 3;
  if (this->ntimeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ntimeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const RestLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestLogin)
    MergeFrom(*source);
  }
}

void RestLogin::MergeFrom(const RestLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strsession().size() > 0) {

    strsession_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsession_);
  }
  if (from.bstatus() != 0) {
    set_bstatus(from.bstatus());
  }
  if (from.ntimeout() != 0) {
    set_ntimeout(from.ntimeout());
  }
}

void RestLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestLogin::CopyFrom(const RestLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestLogin::IsInitialized() const {
  return true;
}

void RestLogin::Swap(RestLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestLogin::InternalSwap(RestLogin* other) {
  strsession_.Swap(&other->strsession_);
  std::swap(bstatus_, other->bstatus_);
  std::swap(ntimeout_, other->ntimeout_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestLogin::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestLogin

// bool bStatus = 1;
void RestLogin::clear_bstatus() {
  bstatus_ = false;
}
bool RestLogin::bstatus() const {
  // @@protoc_insertion_point(field_get:RestLogin.bStatus)
  return bstatus_;
}
void RestLogin::set_bstatus(bool value) {
  
  bstatus_ = value;
  // @@protoc_insertion_point(field_set:RestLogin.bStatus)
}

// string strSession = 2;
void RestLogin::clear_strsession() {
  strsession_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestLogin::strsession() const {
  // @@protoc_insertion_point(field_get:RestLogin.strSession)
  return strsession_.GetNoArena();
}
void RestLogin::set_strsession(const ::std::string& value) {
  
  strsession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestLogin.strSession)
}
#if LANG_CXX11
void RestLogin::set_strsession(::std::string&& value) {
  
  strsession_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestLogin.strSession)
}
#endif
void RestLogin::set_strsession(const char* value) {
  
  strsession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestLogin.strSession)
}
void RestLogin::set_strsession(const char* value, size_t size) {
  
  strsession_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestLogin.strSession)
}
::std::string* RestLogin::mutable_strsession() {
  
  // @@protoc_insertion_point(field_mutable:RestLogin.strSession)
  return strsession_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestLogin::release_strsession() {
  // @@protoc_insertion_point(field_release:RestLogin.strSession)
  
  return strsession_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestLogin::set_allocated_strsession(::std::string* strsession) {
  if (strsession != NULL) {
    
  } else {
    
  }
  strsession_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsession);
  // @@protoc_insertion_point(field_set_allocated:RestLogin.strSession)
}

// int32 nTimeout = 3;
void RestLogin::clear_ntimeout() {
  ntimeout_ = 0;
}
::google::protobuf::int32 RestLogin::ntimeout() const {
  // @@protoc_insertion_point(field_get:RestLogin.nTimeout)
  return ntimeout_;
}
void RestLogin::set_ntimeout(::google::protobuf::int32 value) {
  
  ntimeout_ = value;
  // @@protoc_insertion_point(field_set:RestLogin.nTimeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestLogout::kBStatusFieldNumber;
const int RestLogout::kStrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestLogout::RestLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestLogout)
}
RestLogout::RestLogout(const RestLogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcode().size() > 0) {
    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  bstatus_ = from.bstatus_;
  // @@protoc_insertion_point(copy_constructor:RestLogout)
}

void RestLogout::SharedCtor() {
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
  _cached_size_ = 0;
}

RestLogout::~RestLogout() {
  // @@protoc_insertion_point(destructor:RestLogout)
  SharedDtor();
}

void RestLogout::SharedDtor() {
  strcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestLogout::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[8].descriptor;
}

const RestLogout& RestLogout::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestLogout* RestLogout::New(::google::protobuf::Arena* arena) const {
  RestLogout* n = new RestLogout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:RestLogout)
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
}

bool RestLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestLogout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bStatus = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCode = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcode().data(), this->strcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestLogout.strCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestLogout)
  return false;
#undef DO_
}

void RestLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestLogout)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bstatus(), output);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestLogout.strCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestLogout)
}

::google::protobuf::uint8* RestLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestLogout)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bstatus(), target);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestLogout.strCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestLogout)
  return target;
}

size_t RestLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestLogout)
  size_t total_size = 0;

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcode());
  }

  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestLogout)
  GOOGLE_DCHECK_NE(&from, this);
  const RestLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestLogout)
    MergeFrom(*source);
  }
}

void RestLogout::MergeFrom(const RestLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcode().size() > 0) {

    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  if (from.bstatus() != 0) {
    set_bstatus(from.bstatus());
  }
}

void RestLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestLogout::CopyFrom(const RestLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestLogout::IsInitialized() const {
  return true;
}

void RestLogout::Swap(RestLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestLogout::InternalSwap(RestLogout* other) {
  strcode_.Swap(&other->strcode_);
  std::swap(bstatus_, other->bstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestLogout::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestLogout

// bool bStatus = 1;
void RestLogout::clear_bstatus() {
  bstatus_ = false;
}
bool RestLogout::bstatus() const {
  // @@protoc_insertion_point(field_get:RestLogout.bStatus)
  return bstatus_;
}
void RestLogout::set_bstatus(bool value) {
  
  bstatus_ = value;
  // @@protoc_insertion_point(field_set:RestLogout.bStatus)
}

// string strCode = 2;
void RestLogout::clear_strcode() {
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestLogout::strcode() const {
  // @@protoc_insertion_point(field_get:RestLogout.strCode)
  return strcode_.GetNoArena();
}
void RestLogout::set_strcode(const ::std::string& value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestLogout.strCode)
}
#if LANG_CXX11
void RestLogout::set_strcode(::std::string&& value) {
  
  strcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestLogout.strCode)
}
#endif
void RestLogout::set_strcode(const char* value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestLogout.strCode)
}
void RestLogout::set_strcode(const char* value, size_t size) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestLogout.strCode)
}
::std::string* RestLogout::mutable_strcode() {
  
  // @@protoc_insertion_point(field_mutable:RestLogout.strCode)
  return strcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestLogout::release_strcode() {
  // @@protoc_insertion_point(field_release:RestLogout.strCode)
  
  return strcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestLogout::set_allocated_strcode(::std::string* strcode) {
  if (strcode != NULL) {
    
  } else {
    
  }
  strcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcode);
  // @@protoc_insertion_point(field_set_allocated:RestLogout.strCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestUpdateUser::kBStatusFieldNumber;
const int RestUpdateUser::kStrCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestUpdateUser::RestUpdateUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_restsystem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RestUpdateUser)
}
RestUpdateUser::RestUpdateUser(const RestUpdateUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcode().size() > 0) {
    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  bstatus_ = from.bstatus_;
  // @@protoc_insertion_point(copy_constructor:RestUpdateUser)
}

void RestUpdateUser::SharedCtor() {
  strcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
  _cached_size_ = 0;
}

RestUpdateUser::~RestUpdateUser() {
  // @@protoc_insertion_point(destructor:RestUpdateUser)
  SharedDtor();
}

void RestUpdateUser::SharedDtor() {
  strcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestUpdateUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestUpdateUser::descriptor() {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[9].descriptor;
}

const RestUpdateUser& RestUpdateUser::default_instance() {
  protobuf_restsystem_2eproto::InitDefaults();
  return *internal_default_instance();
}

RestUpdateUser* RestUpdateUser::New(::google::protobuf::Arena* arena) const {
  RestUpdateUser* n = new RestUpdateUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RestUpdateUser::Clear() {
// @@protoc_insertion_point(message_clear_start:RestUpdateUser)
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bstatus_ = false;
}

bool RestUpdateUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RestUpdateUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool bStatus = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCode = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcode().data(), this->strcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RestUpdateUser.strCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RestUpdateUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RestUpdateUser)
  return false;
#undef DO_
}

void RestUpdateUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RestUpdateUser)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bstatus(), output);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestUpdateUser.strCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RestUpdateUser)
}

::google::protobuf::uint8* RestUpdateUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RestUpdateUser)
  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bstatus(), target);
  }

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcode().data(), this->strcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RestUpdateUser.strCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RestUpdateUser)
  return target;
}

size_t RestUpdateUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RestUpdateUser)
  size_t total_size = 0;

  // string strCode = 2;
  if (this->strcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcode());
  }

  // bool bStatus = 1;
  if (this->bstatus() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestUpdateUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RestUpdateUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RestUpdateUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestUpdateUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RestUpdateUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RestUpdateUser)
    MergeFrom(*source);
  }
}

void RestUpdateUser::MergeFrom(const RestUpdateUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RestUpdateUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.strcode().size() > 0) {

    strcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcode_);
  }
  if (from.bstatus() != 0) {
    set_bstatus(from.bstatus());
  }
}

void RestUpdateUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RestUpdateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestUpdateUser::CopyFrom(const RestUpdateUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RestUpdateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestUpdateUser::IsInitialized() const {
  return true;
}

void RestUpdateUser::Swap(RestUpdateUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestUpdateUser::InternalSwap(RestUpdateUser* other) {
  strcode_.Swap(&other->strcode_);
  std::swap(bstatus_, other->bstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RestUpdateUser::GetMetadata() const {
  protobuf_restsystem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_restsystem_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RestUpdateUser

// bool bStatus = 1;
void RestUpdateUser::clear_bstatus() {
  bstatus_ = false;
}
bool RestUpdateUser::bstatus() const {
  // @@protoc_insertion_point(field_get:RestUpdateUser.bStatus)
  return bstatus_;
}
void RestUpdateUser::set_bstatus(bool value) {
  
  bstatus_ = value;
  // @@protoc_insertion_point(field_set:RestUpdateUser.bStatus)
}

// string strCode = 2;
void RestUpdateUser::clear_strcode() {
  strcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RestUpdateUser::strcode() const {
  // @@protoc_insertion_point(field_get:RestUpdateUser.strCode)
  return strcode_.GetNoArena();
}
void RestUpdateUser::set_strcode(const ::std::string& value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RestUpdateUser.strCode)
}
#if LANG_CXX11
void RestUpdateUser::set_strcode(::std::string&& value) {
  
  strcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RestUpdateUser.strCode)
}
#endif
void RestUpdateUser::set_strcode(const char* value) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RestUpdateUser.strCode)
}
void RestUpdateUser::set_strcode(const char* value, size_t size) {
  
  strcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RestUpdateUser.strCode)
}
::std::string* RestUpdateUser::mutable_strcode() {
  
  // @@protoc_insertion_point(field_mutable:RestUpdateUser.strCode)
  return strcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RestUpdateUser::release_strcode() {
  // @@protoc_insertion_point(field_release:RestUpdateUser.strCode)
  
  return strcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RestUpdateUser::set_allocated_strcode(::std::string* strcode) {
  if (strcode != NULL) {
    
  } else {
    
  }
  strcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strcode);
  // @@protoc_insertion_point(field_set_allocated:RestUpdateUser.strCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
